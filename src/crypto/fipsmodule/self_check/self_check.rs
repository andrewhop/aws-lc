#![allow(
    dead_code,
    mutable_transmutes,
    non_camel_case_types,
    non_snake_case,
    non_upper_case_globals,
    unused_assignments,
    unused_mut
)]
unsafe extern "C" {
    pub type bignum_ctx;
    pub type stack_st_void;
    pub type engine_st;
    pub type env_md_st;
    pub type evp_aead_st;
    pub type bn_blinding_st;
    pub type rsassa_pss_params_st;
    pub type _IO_wide_data;
    pub type _IO_codecvt;
    pub type _IO_marker;
    fn BN_new() -> *mut BIGNUM;
    fn BN_free(bn: *mut BIGNUM);
    fn BN_bin2bn(in_0: *const uint8_t, len: size_t, ret: *mut BIGNUM) -> *mut BIGNUM;
    fn BN_bn2bin_padded(
        out: *mut uint8_t,
        len: size_t,
        in_0: *const BIGNUM,
    ) -> libc::c_int;
    fn CTR_DRBG_init(
        drbg: *mut CTR_DRBG_STATE,
        entropy: *const uint8_t,
        personalization: *const uint8_t,
        personalization_len: size_t,
    ) -> libc::c_int;
    fn AES_set_encrypt_key(
        key: *const uint8_t,
        bits: libc::c_uint,
        aeskey: *mut AES_KEY,
    ) -> libc::c_int;
    fn AES_set_decrypt_key(
        key: *const uint8_t,
        bits: libc::c_uint,
        aeskey: *mut AES_KEY,
    ) -> libc::c_int;
    fn AES_cbc_encrypt(
        in_0: *const uint8_t,
        out: *mut uint8_t,
        len: size_t,
        key: *const AES_KEY,
        ivec: *mut uint8_t,
        enc: libc::c_int,
    );
    fn dh_compute_key_padded_no_self_test(
        out: *mut libc::c_uchar,
        peers_key: *const BIGNUM,
        dh: *mut DH,
    ) -> libc::c_int;
    fn ec_point_mul_no_self_test(
        group: *const EC_GROUP,
        r: *mut EC_POINT,
        g_scalar: *const BIGNUM,
        p: *const EC_POINT,
        p_scalar: *const BIGNUM,
        ctx: *mut BN_CTX,
    ) -> libc::c_int;
    fn EC_group_p256() -> *const EC_GROUP;
    fn EC_POINT_new(group: *const EC_GROUP) -> *mut EC_POINT;
    fn EC_POINT_free(point: *mut EC_POINT);
    fn EC_POINT_point2oct(
        group: *const EC_GROUP,
        point: *const EC_POINT,
        form: point_conversion_form_t,
        buf: *mut uint8_t,
        len: size_t,
        ctx: *mut BN_CTX,
    ) -> size_t;
    fn EC_POINT_oct2point(
        group: *const EC_GROUP,
        point: *mut EC_POINT,
        buf: *const uint8_t,
        len: size_t,
        ctx: *mut BN_CTX,
    ) -> libc::c_int;
    fn ECDSA_SIG_new() -> *mut ECDSA_SIG;
    fn ECDSA_SIG_free(sig: *mut ECDSA_SIG);
    fn EVP_sha256() -> *const EVP_MD;
    fn EVP_aead_aes_128_gcm() -> *const EVP_AEAD;
    fn EVP_AEAD_nonce_length(aead: *const EVP_AEAD) -> size_t;
    fn EVP_AEAD_CTX_zero(ctx: *mut EVP_AEAD_CTX);
    fn EVP_AEAD_CTX_init(
        ctx: *mut EVP_AEAD_CTX,
        aead: *const EVP_AEAD,
        key: *const uint8_t,
        key_len: size_t,
        tag_len: size_t,
        impl_0: *mut ENGINE,
    ) -> libc::c_int;
    fn EVP_AEAD_CTX_cleanup(ctx: *mut EVP_AEAD_CTX);
    fn EVP_AEAD_CTX_seal(
        ctx: *const EVP_AEAD_CTX,
        out: *mut uint8_t,
        out_len: *mut size_t,
        max_out_len: size_t,
        nonce: *const uint8_t,
        nonce_len: size_t,
        in_0: *const uint8_t,
        in_len: size_t,
        ad: *const uint8_t,
        ad_len: size_t,
    ) -> libc::c_int;
    fn EVP_AEAD_CTX_open(
        ctx: *const EVP_AEAD_CTX,
        out: *mut uint8_t,
        out_len: *mut size_t,
        max_out_len: size_t,
        nonce: *const uint8_t,
        nonce_len: size_t,
        in_0: *const uint8_t,
        in_len: size_t,
        ad: *const uint8_t,
        ad_len: size_t,
    ) -> libc::c_int;
    fn HMAC(
        evp_md: *const EVP_MD,
        key: *const libc::c_void,
        key_len: size_t,
        data: *const uint8_t,
        data_len: size_t,
        out: *mut uint8_t,
        out_len: *mut libc::c_uint,
    ) -> *mut uint8_t;
    fn SHA1(data: *const uint8_t, len: size_t, out: *mut uint8_t) -> *mut uint8_t;
    fn SHA256(data: *const uint8_t, len: size_t, out: *mut uint8_t) -> *mut uint8_t;
    fn SHA512(data: *const uint8_t, len: size_t, out: *mut uint8_t) -> *mut uint8_t;
    fn rsa_digestsign_no_self_test(
        md: *const EVP_MD,
        input: *const uint8_t,
        in_len: size_t,
        out: *mut uint8_t,
        out_len: *mut libc::c_uint,
        rsa: *mut RSA,
    ) -> libc::c_int;
    fn rsa_digestverify_no_self_test(
        md: *const EVP_MD,
        input: *const uint8_t,
        in_len: size_t,
        sig: *const uint8_t,
        sig_len: size_t,
        rsa: *mut RSA,
    ) -> libc::c_int;
    static mut stderr: *mut FILE;
    fn fprintf(_: *mut FILE, _: *const libc::c_char, _: ...) -> libc::c_int;
    fn snprintf(
        _: *mut libc::c_char,
        _: libc::c_ulong,
        _: *const libc::c_char,
        _: ...
    ) -> libc::c_int;
    fn CTR_DRBG_reseed(
        drbg: *mut CTR_DRBG_STATE,
        entropy: *const uint8_t,
        additional_data: *const uint8_t,
        additional_data_len: size_t,
    ) -> libc::c_int;
    fn CTR_DRBG_generate(
        drbg: *mut CTR_DRBG_STATE,
        out: *mut uint8_t,
        out_len: size_t,
        additional_data: *const uint8_t,
        additional_data_len: size_t,
    ) -> libc::c_int;
    fn CTR_DRBG_clear(drbg: *mut CTR_DRBG_STATE);
    fn DH_new() -> *mut DH;
    fn DH_free(dh: *mut DH);
    fn DH_set0_key(
        dh: *mut DH,
        pub_key: *mut BIGNUM,
        priv_key: *mut BIGNUM,
    ) -> libc::c_int;
    fn DH_get_rfc7919_2048() -> *mut DH;
    fn DH_size(dh: *const DH) -> libc::c_int;
    fn EC_KEY_new() -> *mut EC_KEY;
    fn EC_KEY_free(key: *mut EC_KEY);
    fn EC_KEY_set_group(key: *mut EC_KEY, group: *const EC_GROUP) -> libc::c_int;
    fn EC_KEY_set_private_key(key: *mut EC_KEY, priv_0: *const BIGNUM) -> libc::c_int;
    fn EC_KEY_set_public_key_affine_coordinates(
        key: *mut EC_KEY,
        x: *const BIGNUM,
        y: *const BIGNUM,
    ) -> libc::c_int;
    fn PKCS5_PBKDF2_HMAC(
        password: *const libc::c_char,
        password_len: size_t,
        salt: *const uint8_t,
        salt_len: size_t,
        iterations: uint32_t,
        digest: *const EVP_MD,
        key_len: size_t,
        out_key: *mut uint8_t,
    ) -> libc::c_int;
    fn HKDF(
        out_key: *mut uint8_t,
        out_len: size_t,
        digest: *const EVP_MD,
        secret: *const uint8_t,
        secret_len: size_t,
        salt: *const uint8_t,
        salt_len: size_t,
        info: *const uint8_t,
        info_len: size_t,
    ) -> libc::c_int;
    fn CRYPTO_tls1_prf(
        digest: *const EVP_MD,
        out: *mut uint8_t,
        out_len: size_t,
        secret: *const uint8_t,
        secret_len: size_t,
        label: *const libc::c_char,
        label_len: size_t,
        seed1: *const uint8_t,
        seed1_len: size_t,
        seed2: *const uint8_t,
        seed2_len: size_t,
    ) -> libc::c_int;
    fn SSKDF_digest(
        out_key: *mut uint8_t,
        out_len: size_t,
        digest: *const EVP_MD,
        secret: *const uint8_t,
        secret_len: size_t,
        info: *const uint8_t,
        info_len: size_t,
    ) -> libc::c_int;
    fn KBKDF_ctr_hmac(
        out_key: *mut uint8_t,
        out_len: size_t,
        digest: *const EVP_MD,
        secret: *const uint8_t,
        secret_len: size_t,
        info: *const uint8_t,
        info_len: size_t,
    ) -> libc::c_int;
    fn RSA_new() -> *mut RSA;
    fn RSA_free(rsa: *mut RSA);
    fn __assert_fail(
        __assertion: *const libc::c_char,
        __file: *const libc::c_char,
        __line: libc::c_uint,
        __function: *const libc::c_char,
    ) -> !;
    fn memcpy(
        _: *mut libc::c_void,
        _: *const libc::c_void,
        _: libc::c_ulong,
    ) -> *mut libc::c_void;
    fn memset(
        _: *mut libc::c_void,
        _: libc::c_int,
        _: libc::c_ulong,
    ) -> *mut libc::c_void;
    fn memcmp(
        _: *const libc::c_void,
        _: *const libc::c_void,
        _: libc::c_ulong,
    ) -> libc::c_int;
    fn AWS_LC_FIPS_failure(message: *const libc::c_char);
    fn ED25519_sign_no_self_test(
        out_sig: *mut uint8_t,
        message: *const uint8_t,
        message_len: size_t,
        private_key: *const uint8_t,
    ) -> libc::c_int;
    fn ED25519_verify_no_self_test(
        message: *const uint8_t,
        message_len: size_t,
        signature: *const uint8_t,
        public_key: *const uint8_t,
    ) -> libc::c_int;
    fn ED25519ph_sign_no_self_test(
        out_sig: *mut uint8_t,
        message: *const uint8_t,
        message_len: size_t,
        private_key: *const uint8_t,
        context: *const uint8_t,
        context_len: size_t,
    ) -> libc::c_int;
    fn ED25519ph_verify_no_self_test(
        message: *const uint8_t,
        message_len: size_t,
        signature: *const uint8_t,
        public_key: *const uint8_t,
        context: *const uint8_t,
        context_len: size_t,
    ) -> libc::c_int;
    fn bn_set_static_words(bn: *mut BIGNUM, words: *const BN_ULONG, num: size_t);
    fn ecdsa_digestsign_no_self_test(
        md: *const EVP_MD,
        input: *const uint8_t,
        in_len: size_t,
        eckey: *const EC_KEY,
        nonce: *const uint8_t,
        nonce_len: size_t,
    ) -> *mut ECDSA_SIG;
    fn ecdsa_digestverify_no_self_test(
        md: *const EVP_MD,
        input: *const uint8_t,
        in_len: size_t,
        sig: *const ECDSA_SIG,
        eckey: *const EC_KEY,
    ) -> libc::c_int;
    fn ml_kem_512_keypair_deterministic_no_self_test(
        public_key: *mut uint8_t,
        public_len: *mut size_t,
        secret_key: *mut uint8_t,
        secret_len: *mut size_t,
        seed: *const uint8_t,
    ) -> libc::c_int;
    fn ml_kem_512_encapsulate_deterministic_no_self_test(
        ciphertext: *mut uint8_t,
        ciphertext_len: *mut size_t,
        shared_secret: *mut uint8_t,
        shared_secret_len: *mut size_t,
        public_key: *const uint8_t,
        seed: *const uint8_t,
    ) -> libc::c_int;
    fn ml_kem_512_decapsulate_no_self_test(
        shared_secret: *mut uint8_t,
        shared_secret_len: *mut size_t,
        ciphertext: *const uint8_t,
        secret_key: *const uint8_t,
    ) -> libc::c_int;
    fn SHA3_256(data: *const uint8_t, len: size_t, out: *mut uint8_t) -> *mut uint8_t;
    fn ml_dsa_44_keypair_internal_no_self_test(
        public_key: *mut uint8_t,
        private_key: *mut uint8_t,
        seed: *const uint8_t,
    ) -> libc::c_int;
    fn ml_dsa_44_sign_internal_no_self_test(
        private_key: *const uint8_t,
        sig: *mut uint8_t,
        sig_len: *mut size_t,
        message: *const uint8_t,
        message_len: size_t,
        pre: *const uint8_t,
        pre_len: size_t,
        rnd: *const uint8_t,
    ) -> libc::c_int;
    fn ml_dsa_44_verify_internal_no_self_test(
        public_key: *const uint8_t,
        sig: *const uint8_t,
        sig_len: size_t,
        message: *const uint8_t,
        message_len: size_t,
        pre: *const uint8_t,
        pre_len: size_t,
    ) -> libc::c_int;
}
pub type size_t = libc::c_ulong;
pub type __uint8_t = libc::c_uchar;
pub type __uint32_t = libc::c_uint;
pub type __uint64_t = libc::c_ulong;
pub type __off_t = libc::c_long;
pub type __off64_t = libc::c_long;
pub type uint8_t = __uint8_t;
pub type uint32_t = __uint32_t;
pub type uint64_t = __uint64_t;
pub type BN_CTX = bignum_ctx;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct bignum_st {
    pub d: *mut BN_ULONG,
    pub width: libc::c_int,
    pub dmax: libc::c_int,
    pub neg: libc::c_int,
    pub flags: libc::c_int,
}
pub type BN_ULONG = uint64_t;
pub type BIGNUM = bignum_st;
pub type CRYPTO_refcount_t = uint32_t;
pub type CRYPTO_EX_DATA = crypto_ex_data_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct crypto_ex_data_st {
    pub sk: *mut stack_st_void,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct bn_mont_ctx_st {
    pub RR: BIGNUM,
    pub N: BIGNUM,
    pub n0: [BN_ULONG; 2],
}
pub type BN_MONT_CTX = bn_mont_ctx_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ctr_drbg_state_st {
    pub ks: AES_KEY,
    pub block: block128_f,
    pub ctr: ctr128_f,
    pub counter: [uint8_t; 16],
    pub reseed_counter: uint64_t,
}
pub type ctr128_f = Option::<
    unsafe extern "C" fn(
        *const uint8_t,
        *mut uint8_t,
        size_t,
        *const AES_KEY,
        *const uint8_t,
    ) -> (),
>;
pub type AES_KEY = aes_key_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct aes_key_st {
    pub rd_key: [uint32_t; 60],
    pub rounds: libc::c_uint,
}
pub type block128_f = Option::<
    unsafe extern "C" fn(*const uint8_t, *mut uint8_t, *const AES_KEY) -> (),
>;
pub type CTR_DRBG_STATE = ctr_drbg_state_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct dh_st {
    pub p: *mut BIGNUM,
    pub g: *mut BIGNUM,
    pub q: *mut BIGNUM,
    pub pub_key: *mut BIGNUM,
    pub priv_key: *mut BIGNUM,
    pub priv_length: libc::c_uint,
    pub method_mont_p_lock: CRYPTO_MUTEX,
    pub method_mont_p: *mut BN_MONT_CTX,
    pub flags: libc::c_int,
    pub references: CRYPTO_refcount_t,
}
pub type CRYPTO_MUTEX = crypto_mutex_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub union crypto_mutex_st {
    pub alignment: libc::c_double,
    pub padding: [uint8_t; 56],
}
pub type DH = dh_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ec_group_st {
    pub meth: *const EC_METHOD,
    pub generator: EC_POINT,
    pub order: BN_MONT_CTX,
    pub field: BN_MONT_CTX,
    pub a: EC_FELEM,
    pub b: EC_FELEM,
    pub comment: *const libc::c_char,
    pub curve_name: libc::c_int,
    pub oid: [uint8_t; 9],
    pub oid_len: uint8_t,
    pub a_is_minus3: libc::c_int,
    pub has_order: libc::c_int,
    pub field_greater_than_order: libc::c_int,
    pub conv_form: point_conversion_form_t,
    pub mutable_ec_group: libc::c_int,
}
pub type point_conversion_form_t = libc::c_uint;
pub const POINT_CONVERSION_HYBRID: point_conversion_form_t = 6;
pub const POINT_CONVERSION_UNCOMPRESSED: point_conversion_form_t = 4;
pub const POINT_CONVERSION_COMPRESSED: point_conversion_form_t = 2;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct EC_FELEM {
    pub words: [BN_ULONG; 9],
}
pub type EC_POINT = ec_point_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ec_point_st {
    pub group: *mut EC_GROUP,
    pub raw: EC_JACOBIAN,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct EC_JACOBIAN {
    pub X: EC_FELEM,
    pub Y: EC_FELEM,
    pub Z: EC_FELEM,
}
pub type EC_GROUP = ec_group_st;
pub type EC_METHOD = ec_method_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ec_method_st {
    pub point_get_affine_coordinates: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *const EC_JACOBIAN,
            *mut EC_FELEM,
            *mut EC_FELEM,
        ) -> libc::c_int,
    >,
    pub jacobian_to_affine_batch: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_AFFINE,
            *const EC_JACOBIAN,
            size_t,
        ) -> libc::c_int,
    >,
    pub add: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_JACOBIAN,
            *const EC_JACOBIAN,
            *const EC_JACOBIAN,
        ) -> (),
    >,
    pub dbl: Option::<
        unsafe extern "C" fn(*const EC_GROUP, *mut EC_JACOBIAN, *const EC_JACOBIAN) -> (),
    >,
    pub mul: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_JACOBIAN,
            *const EC_JACOBIAN,
            *const EC_SCALAR,
        ) -> (),
    >,
    pub mul_base: Option::<
        unsafe extern "C" fn(*const EC_GROUP, *mut EC_JACOBIAN, *const EC_SCALAR) -> (),
    >,
    pub mul_batch: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_JACOBIAN,
            *const EC_JACOBIAN,
            *const EC_SCALAR,
            *const EC_JACOBIAN,
            *const EC_SCALAR,
            *const EC_JACOBIAN,
            *const EC_SCALAR,
        ) -> (),
    >,
    pub mul_public: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_JACOBIAN,
            *const EC_SCALAR,
            *const EC_JACOBIAN,
            *const EC_SCALAR,
        ) -> (),
    >,
    pub mul_public_batch: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_JACOBIAN,
            *const EC_SCALAR,
            *const EC_JACOBIAN,
            *const EC_SCALAR,
            size_t,
        ) -> libc::c_int,
    >,
    pub init_precomp: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_PRECOMP,
            *const EC_JACOBIAN,
        ) -> libc::c_int,
    >,
    pub mul_precomp: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_JACOBIAN,
            *const EC_PRECOMP,
            *const EC_SCALAR,
            *const EC_PRECOMP,
            *const EC_SCALAR,
            *const EC_PRECOMP,
            *const EC_SCALAR,
        ) -> (),
    >,
    pub felem_mul: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_FELEM,
            *const EC_FELEM,
            *const EC_FELEM,
        ) -> (),
    >,
    pub felem_sqr: Option::<
        unsafe extern "C" fn(*const EC_GROUP, *mut EC_FELEM, *const EC_FELEM) -> (),
    >,
    pub felem_to_bytes: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut uint8_t,
            *mut size_t,
            *const EC_FELEM,
        ) -> (),
    >,
    pub felem_from_bytes: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_FELEM,
            *const uint8_t,
            size_t,
        ) -> libc::c_int,
    >,
    pub felem_reduce: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_FELEM,
            *const BN_ULONG,
            size_t,
        ) -> (),
    >,
    pub felem_exp: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_FELEM,
            *const EC_FELEM,
            *const BN_ULONG,
            size_t,
        ) -> (),
    >,
    pub scalar_inv0_montgomery: Option::<
        unsafe extern "C" fn(*const EC_GROUP, *mut EC_SCALAR, *const EC_SCALAR) -> (),
    >,
    pub scalar_to_montgomery_inv_vartime: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *mut EC_SCALAR,
            *const EC_SCALAR,
        ) -> libc::c_int,
    >,
    pub cmp_x_coordinate: Option::<
        unsafe extern "C" fn(
            *const EC_GROUP,
            *const EC_JACOBIAN,
            *const EC_SCALAR,
        ) -> libc::c_int,
    >,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct EC_SCALAR {
    pub words: [BN_ULONG; 9],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union EC_PRECOMP {
    pub comb: [EC_AFFINE; 31],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct EC_AFFINE {
    pub X: EC_FELEM,
    pub Y: EC_FELEM,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ec_key_st {
    pub group: *mut EC_GROUP,
    pub pub_key: *mut EC_POINT,
    pub priv_key: *mut EC_WRAPPED_SCALAR,
    pub enc_flag: libc::c_uint,
    pub conv_form: point_conversion_form_t,
    pub references: CRYPTO_refcount_t,
    pub eckey_method: *const EC_KEY_METHOD,
    pub ex_data: CRYPTO_EX_DATA,
}
pub type EC_KEY_METHOD = ec_key_method_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ec_key_method_st {
    pub init: Option::<unsafe extern "C" fn(*mut EC_KEY) -> libc::c_int>,
    pub finish: Option::<unsafe extern "C" fn(*mut EC_KEY) -> ()>,
    pub sign: Option::<
        unsafe extern "C" fn(
            libc::c_int,
            *const uint8_t,
            libc::c_int,
            *mut uint8_t,
            *mut libc::c_uint,
            *const BIGNUM,
            *const BIGNUM,
            *mut EC_KEY,
        ) -> libc::c_int,
    >,
    pub sign_sig: Option::<
        unsafe extern "C" fn(
            *const uint8_t,
            libc::c_int,
            *const BIGNUM,
            *const BIGNUM,
            *mut EC_KEY,
        ) -> *mut ECDSA_SIG,
    >,
    pub flags: libc::c_int,
}
pub type EC_KEY = ec_key_st;
pub type ECDSA_SIG = ecdsa_sig_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ecdsa_sig_st {
    pub r: *mut BIGNUM,
    pub s: *mut BIGNUM,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct EC_WRAPPED_SCALAR {
    pub bignum: BIGNUM,
    pub scalar: EC_SCALAR,
}
pub type ENGINE = engine_st;
pub type EVP_MD = env_md_st;
pub type EVP_AEAD = evp_aead_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct evp_aead_ctx_st {
    pub aead: *const EVP_AEAD,
    pub state: evp_aead_ctx_st_state,
    pub state_offset: uint8_t,
    pub tag_len: uint8_t,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union evp_aead_ctx_st_state {
    pub opaque: [uint8_t; 564],
    pub alignment: uint64_t,
    pub ptr: *mut libc::c_void,
}
pub type EVP_AEAD_CTX = evp_aead_ctx_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct rsa_meth_st {
    pub app_data: *mut libc::c_void,
    pub init: Option::<unsafe extern "C" fn(*mut RSA) -> libc::c_int>,
    pub finish: Option::<unsafe extern "C" fn(*mut RSA) -> libc::c_int>,
    pub size: Option::<unsafe extern "C" fn(*const RSA) -> size_t>,
    pub sign: Option::<
        unsafe extern "C" fn(
            libc::c_int,
            *const uint8_t,
            libc::c_uint,
            *mut uint8_t,
            *mut libc::c_uint,
            *const RSA,
        ) -> libc::c_int,
    >,
    pub sign_raw: Option::<
        unsafe extern "C" fn(
            libc::c_int,
            *const uint8_t,
            *mut uint8_t,
            *mut RSA,
            libc::c_int,
        ) -> libc::c_int,
    >,
    pub verify_raw: Option::<
        unsafe extern "C" fn(
            libc::c_int,
            *const uint8_t,
            *mut uint8_t,
            *mut RSA,
            libc::c_int,
        ) -> libc::c_int,
    >,
    pub decrypt: Option::<
        unsafe extern "C" fn(
            libc::c_int,
            *const uint8_t,
            *mut uint8_t,
            *mut RSA,
            libc::c_int,
        ) -> libc::c_int,
    >,
    pub encrypt: Option::<
        unsafe extern "C" fn(
            libc::c_int,
            *const uint8_t,
            *mut uint8_t,
            *mut RSA,
            libc::c_int,
        ) -> libc::c_int,
    >,
    pub private_transform: Option::<
        unsafe extern "C" fn(
            *mut RSA,
            *mut uint8_t,
            *const uint8_t,
            size_t,
        ) -> libc::c_int,
    >,
    pub flags: libc::c_int,
}
pub type RSA = rsa_st;
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct rsa_st {
    pub meth: *const RSA_METHOD,
    pub n: *mut BIGNUM,
    pub e: *mut BIGNUM,
    pub d: *mut BIGNUM,
    pub p: *mut BIGNUM,
    pub q: *mut BIGNUM,
    pub dmp1: *mut BIGNUM,
    pub dmq1: *mut BIGNUM,
    pub iqmp: *mut BIGNUM,
    pub pss: *mut RSASSA_PSS_PARAMS,
    pub ex_data: CRYPTO_EX_DATA,
    pub references: CRYPTO_refcount_t,
    pub flags: libc::c_int,
    pub lock: CRYPTO_MUTEX,
    pub mont_n: *mut BN_MONT_CTX,
    pub mont_p: *mut BN_MONT_CTX,
    pub mont_q: *mut BN_MONT_CTX,
    pub d_fixed: *mut BIGNUM,
    pub dmp1_fixed: *mut BIGNUM,
    pub dmq1_fixed: *mut BIGNUM,
    pub iqmp_mont: *mut BIGNUM,
    pub num_blindings: size_t,
    pub blindings: *mut *mut BN_BLINDING,
    pub blindings_inuse: *mut libc::c_uchar,
    pub blinding_fork_generation: uint64_t,
    #[bitfield(name = "private_key_frozen", ty = "libc::c_uint", bits = "0..=0")]
    pub private_key_frozen: [u8; 1],
    #[bitfield(padding)]
    pub c2rust_padding: [u8; 7],
}
pub type BN_BLINDING = bn_blinding_st;
pub type RSASSA_PSS_PARAMS = rsassa_pss_params_st;
pub type RSA_METHOD = rsa_meth_st;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct _IO_FILE {
    pub _flags: libc::c_int,
    pub _IO_read_ptr: *mut libc::c_char,
    pub _IO_read_end: *mut libc::c_char,
    pub _IO_read_base: *mut libc::c_char,
    pub _IO_write_base: *mut libc::c_char,
    pub _IO_write_ptr: *mut libc::c_char,
    pub _IO_write_end: *mut libc::c_char,
    pub _IO_buf_base: *mut libc::c_char,
    pub _IO_buf_end: *mut libc::c_char,
    pub _IO_save_base: *mut libc::c_char,
    pub _IO_backup_base: *mut libc::c_char,
    pub _IO_save_end: *mut libc::c_char,
    pub _markers: *mut _IO_marker,
    pub _chain: *mut _IO_FILE,
    pub _fileno: libc::c_int,
    pub _flags2: libc::c_int,
    pub _old_offset: __off_t,
    pub _cur_column: libc::c_ushort,
    pub _vtable_offset: libc::c_schar,
    pub _shortbuf: [libc::c_char; 1],
    pub _lock: *mut libc::c_void,
    pub _offset: __off64_t,
    pub _codecvt: *mut _IO_codecvt,
    pub _wide_data: *mut _IO_wide_data,
    pub _freeres_list: *mut _IO_FILE,
    pub _freeres_buf: *mut libc::c_void,
    pub __pad5: size_t,
    pub _mode: libc::c_int,
    pub _unused2: [libc::c_char; 20],
}
pub type _IO_lock_t = ();
pub type FILE = _IO_FILE;
#[inline]
unsafe extern "C" fn OPENSSL_memcmp(
    mut s1: *const libc::c_void,
    mut s2: *const libc::c_void,
    mut n: size_t,
) -> libc::c_int {
    if n == 0 as libc::c_int as size_t {
        return 0 as libc::c_int;
    }
    return memcmp(s1, s2, n);
}
#[inline]
unsafe extern "C" fn OPENSSL_memcpy(
    mut dst: *mut libc::c_void,
    mut src: *const libc::c_void,
    mut n: size_t,
) -> *mut libc::c_void {
    if n == 0 as libc::c_int as size_t {
        return dst;
    }
    return memcpy(dst, src, n);
}
#[inline]
unsafe extern "C" fn OPENSSL_memset(
    mut dst: *mut libc::c_void,
    mut c: libc::c_int,
    mut n: size_t,
) -> *mut libc::c_void {
    if n == 0 as libc::c_int as size_t {
        return dst;
    }
    return memset(dst, c, n);
}
unsafe extern "C" fn hexdump(
    mut buf: *mut libc::c_char,
    mut in_0: *const uint8_t,
    mut in_len: size_t,
) {
    if (in_len * 2 as libc::c_int as size_t)
        < (2560 as libc::c_int * 2 as libc::c_int) as size_t
    {} else {
        __assert_fail(
            b"in_len * 2 < MAX_HEXDUMP_SIZE\0" as *const u8 as *const libc::c_char,
            b"/home/ubuntu/workspace/oss/aws-lc/crypto/fipsmodule/self_check/self_check.c\0"
                as *const u8 as *const libc::c_char,
            57 as libc::c_int as libc::c_uint,
            (*::core::mem::transmute::<
                &[u8; 46],
                &[libc::c_char; 46],
            >(b"void hexdump(char *, const uint8_t *, size_t)\0"))
                .as_ptr(),
        );
    }
    'c_3529: {
        if (in_len * 2 as libc::c_int as size_t)
            < (2560 as libc::c_int * 2 as libc::c_int) as size_t
        {} else {
            __assert_fail(
                b"in_len * 2 < MAX_HEXDUMP_SIZE\0" as *const u8 as *const libc::c_char,
                b"/home/ubuntu/workspace/oss/aws-lc/crypto/fipsmodule/self_check/self_check.c\0"
                    as *const u8 as *const libc::c_char,
                57 as libc::c_int as libc::c_uint,
                (*::core::mem::transmute::<
                    &[u8; 46],
                    &[libc::c_char; 46],
                >(b"void hexdump(char *, const uint8_t *, size_t)\0"))
                    .as_ptr(),
            );
        }
    };
    let mut pos: size_t = 0 as libc::c_int as size_t;
    let mut i: size_t = 0 as libc::c_int as size_t;
    while i < in_len {
        pos = pos
            .wrapping_add(
                snprintf(
                    buf.offset(pos as isize),
                    ((2560 as libc::c_int * 2 as libc::c_int) as size_t)
                        .wrapping_sub(pos),
                    b"%02x\0" as *const u8 as *const libc::c_char,
                    *in_0.offset(i as isize) as libc::c_int,
                ) as size_t,
            );
        i = i.wrapping_add(1);
        i;
    }
}
unsafe extern "C" fn check_test_optional_abort(
    mut expected: *const libc::c_void,
    mut actual: *const libc::c_void,
    mut expected_len: size_t,
    mut name: *const libc::c_char,
    call_fips_failure: bool,
) -> libc::c_int {
    let mut expected_hex: [libc::c_char; 5120] = [
        0 as libc::c_int as libc::c_char,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ];
    let mut actual_hex: [libc::c_char; 5120] = [
        0 as libc::c_int as libc::c_char,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ];
    let mut error_msg: [libc::c_char; 10315] = [
        0 as libc::c_int as libc::c_char,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ];
    if OPENSSL_memcmp(actual, expected, expected_len) != 0 as libc::c_int {
        if (::core::mem::size_of::<*const libc::c_char>() as libc::c_ulong)
            < 33 as libc::c_int as libc::c_ulong
        {} else {
            __assert_fail(
                b"sizeof(name) < MAX_NAME\0" as *const u8 as *const libc::c_char,
                b"/home/ubuntu/workspace/oss/aws-lc/crypto/fipsmodule/self_check/self_check.c\0"
                    as *const u8 as *const libc::c_char,
                70 as libc::c_int as libc::c_uint,
                (*::core::mem::transmute::<
                    &[u8; 93],
                    &[libc::c_char; 93],
                >(
                    b"int check_test_optional_abort(const void *, const void *, size_t, const char *, const _Bool)\0",
                ))
                    .as_ptr(),
            );
        }
        'c_3600: {
            if (::core::mem::size_of::<*const libc::c_char>() as libc::c_ulong)
                < 33 as libc::c_int as libc::c_ulong
            {} else {
                __assert_fail(
                    b"sizeof(name) < MAX_NAME\0" as *const u8 as *const libc::c_char,
                    b"/home/ubuntu/workspace/oss/aws-lc/crypto/fipsmodule/self_check/self_check.c\0"
                        as *const u8 as *const libc::c_char,
                    70 as libc::c_int as libc::c_uint,
                    (*::core::mem::transmute::<
                        &[u8; 93],
                        &[libc::c_char; 93],
                    >(
                        b"int check_test_optional_abort(const void *, const void *, size_t, const char *, const _Bool)\0",
                    ))
                        .as_ptr(),
                );
            }
        };
        hexdump(expected_hex.as_mut_ptr(), expected as *const uint8_t, expected_len);
        hexdump(actual_hex.as_mut_ptr(), actual as *const uint8_t, expected_len);
        snprintf(
            error_msg.as_mut_ptr(),
            ::core::mem::size_of::<[libc::c_char; 10315]>() as libc::c_ulong,
            b"%s failed.\nExpected:   %s\nCalculated: %s\n\0" as *const u8
                as *const libc::c_char,
            name,
            expected_hex.as_mut_ptr(),
            actual_hex.as_mut_ptr(),
        );
        if call_fips_failure {
            AWS_LC_FIPS_failure(error_msg.as_mut_ptr());
        } else {
            fprintf(
                stderr,
                b"%s\n\0" as *const u8 as *const libc::c_char,
                error_msg.as_mut_ptr(),
            );
        }
        return 0 as libc::c_int;
    }
    return 1 as libc::c_int;
}
unsafe extern "C" fn check_test(
    mut expected: *const libc::c_void,
    mut actual: *const libc::c_void,
    mut expected_len: size_t,
    mut name: *const libc::c_char,
) -> libc::c_int {
    return check_test_optional_abort(
        expected,
        actual,
        expected_len,
        name,
        1 as libc::c_int != 0,
    );
}
unsafe extern "C" fn set_bignum(
    mut out: *mut *mut BIGNUM,
    mut in_0: *const uint8_t,
    mut len: size_t,
) -> libc::c_int {
    *out = BN_bin2bn(in_0, len, 0 as *mut BIGNUM);
    return (*out != 0 as *mut libc::c_void as *mut BIGNUM) as libc::c_int;
}
unsafe extern "C" fn serialize_ecdsa_sig(
    mut out: *mut uint8_t,
    mut out_len: size_t,
    mut sig: *const ECDSA_SIG,
) -> libc::c_int {
    if out_len & 1 as libc::c_int as size_t != 0
        || BN_bn2bin_padded(out, out_len / 2 as libc::c_int as size_t, (*sig).r) == 0
        || BN_bn2bin_padded(
            out.offset((out_len / 2 as libc::c_int as size_t) as isize),
            out_len / 2 as libc::c_int as size_t,
            (*sig).s,
        ) == 0
    {
        return 0 as libc::c_int;
    }
    return 1 as libc::c_int;
}
unsafe extern "C" fn parse_ecdsa_sig(
    mut in_0: *const uint8_t,
    mut in_len: size_t,
) -> *mut ECDSA_SIG {
    let mut ret: *mut ECDSA_SIG = ECDSA_SIG_new();
    if ret.is_null() || in_len & 1 as libc::c_int as size_t != 0
        || (BN_bin2bn(in_0, in_len / 2 as libc::c_int as size_t, (*ret).r)).is_null()
        || (BN_bin2bn(
            in_0.offset((in_len / 2 as libc::c_int as size_t) as isize),
            in_len / 2 as libc::c_int as size_t,
            (*ret).s,
        ))
            .is_null()
    {
        ECDSA_SIG_free(ret);
        ret = 0 as *mut ECDSA_SIG;
    }
    return ret;
}
unsafe extern "C" fn self_test_rsa_key() -> *mut RSA {
    static mut kN: [uint8_t; 256] = [
        0xd3 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
    ];
    static mut kE: [uint8_t; 3] = [
        0x1 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
    ];
    static mut kD: [uint8_t; 256] = [
        0x2f as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
    ];
    static mut kP: [uint8_t; 128] = [
        0xf7 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
    ];
    static mut kQ: [uint8_t; 128] = [
        0xda as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
    ];
    static mut kDModPMinusOne: [uint8_t; 128] = [
        0xf5 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
    ];
    static mut kDModQMinusOne: [uint8_t; 128] = [
        0x64 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
    ];
    static mut kQInverseModP: [uint8_t; 128] = [
        0xd0 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
    ];
    let mut rsa: *mut RSA = RSA_new();
    if rsa.is_null()
        || set_bignum(
            &mut (*rsa).n,
            kN.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
        ) == 0
        || set_bignum(
            &mut (*rsa).e,
            kE.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 3]>() as libc::c_ulong,
        ) == 0
        || set_bignum(
            &mut (*rsa).d,
            kD.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
        ) == 0
        || set_bignum(
            &mut (*rsa).p,
            kP.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 128]>() as libc::c_ulong,
        ) == 0
        || set_bignum(
            &mut (*rsa).q,
            kQ.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 128]>() as libc::c_ulong,
        ) == 0
        || set_bignum(
            &mut (*rsa).dmp1,
            kDModPMinusOne.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 128]>() as libc::c_ulong,
        ) == 0
        || set_bignum(
            &mut (*rsa).dmq1,
            kDModQMinusOne.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 128]>() as libc::c_ulong,
        ) == 0
        || set_bignum(
            &mut (*rsa).iqmp,
            kQInverseModP.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 128]>() as libc::c_ulong,
        ) == 0
    {
        RSA_free(rsa);
        return 0 as *mut RSA;
    }
    return rsa;
}
unsafe extern "C" fn self_test_ffc_dh_key(
    mut p: *const uint8_t,
    mut p_len: size_t,
    mut q: *const uint8_t,
    mut q_len: size_t,
    mut g: *const uint8_t,
    mut g_len: size_t,
    mut priv_key: *const uint8_t,
    mut priv_key_len: size_t,
    mut pub_key: *const uint8_t,
    mut pub_key_len: size_t,
) -> *mut DH {
    let mut dh: *mut DH = DH_new();
    if dh.is_null() || set_bignum(&mut (*dh).p, p, p_len) == 0
        || set_bignum(&mut (*dh).q, q, q_len) == 0
        || set_bignum(&mut (*dh).g, g, g_len) == 0
        || set_bignum(&mut (*dh).priv_key, priv_key, priv_key_len) == 0
        || set_bignum(&mut (*dh).pub_key, pub_key, pub_key_len) == 0
    {
        DH_free(dh);
        return 0 as *mut DH;
    }
    return dh;
}
unsafe extern "C" fn self_test_ffc_dh_fb_key() -> *mut DH {
    static mut kDH_p: [uint8_t; 256] = [
        0xd9 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
    ];
    static mut kDH_q: [uint8_t; 28] = [
        0xcc as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
    ];
    static mut kDH_g: [uint8_t; 256] = [
        0x31 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
    ];
    let kDH_private_key: [uint8_t; 28] = [
        0x75 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
    ];
    let kDH_public_key: [uint8_t; 256] = [
        0x80 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
    ];
    return self_test_ffc_dh_key(
        kDH_p.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
        kDH_q.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 28]>() as libc::c_ulong,
        kDH_g.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
        kDH_private_key.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 28]>() as libc::c_ulong,
        kDH_public_key.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
    );
}
unsafe extern "C" fn self_test_ecdsa_key() -> *mut EC_KEY {
    static mut kQx: [uint8_t; 32] = [
        0xc8 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
    ];
    static mut kQy: [uint8_t; 32] = [
        0xe0 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
    ];
    static mut kD: [uint8_t; 32] = [
        0xc6 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
    ];
    let mut ec_key: *mut EC_KEY = EC_KEY_new();
    let mut qx: *mut BIGNUM = BN_bin2bn(
        kQx.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
        0 as *mut BIGNUM,
    );
    let mut qy: *mut BIGNUM = BN_bin2bn(
        kQy.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
        0 as *mut BIGNUM,
    );
    let mut d: *mut BIGNUM = BN_bin2bn(
        kD.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
        0 as *mut BIGNUM,
    );
    if ec_key.is_null() || qx.is_null() || qy.is_null() || d.is_null()
        || EC_KEY_set_group(ec_key, EC_group_p256()) == 0
        || EC_KEY_set_public_key_affine_coordinates(ec_key, qx, qy) == 0
        || EC_KEY_set_private_key(ec_key, d) == 0
    {
        EC_KEY_free(ec_key);
        ec_key = 0 as *mut EC_KEY;
    }
    BN_free(qx);
    BN_free(qy);
    BN_free(d);
    return ec_key;
}
unsafe extern "C" fn self_test_dh() -> *mut DH {
    static mut kFFDHE2048PrivateKeyData: [BN_ULONG; 4] = [
        (0x187be36b as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0xd38a4fa1 as libc::c_uint as BN_ULONG,
        (0xa152f39 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0x6458f3b8 as libc::c_int as BN_ULONG,
        (0x570187e as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0xc422eeb7 as libc::c_uint as BN_ULONG,
        (0x1 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0x91173f2a as libc::c_uint as BN_ULONG,
    ];
    let mut dh: *mut DH = DH_get_rfc7919_2048();
    if dh.is_null() {
        return 0 as *mut DH;
    }
    let mut priv_0: *mut BIGNUM = BN_new();
    if !priv_0.is_null() {
        bn_set_static_words(
            priv_0,
            kFFDHE2048PrivateKeyData.as_ptr(),
            (::core::mem::size_of::<[BN_ULONG; 4]>() as libc::c_ulong)
                .wrapping_div(::core::mem::size_of::<BN_ULONG>() as libc::c_ulong),
        );
        if !(DH_set0_key(dh, 0 as *mut BIGNUM, priv_0) == 0) {
            return dh;
        }
    }
    BN_free(priv_0);
    DH_free(dh);
    return 0 as *mut DH;
}
#[inline(never)]
unsafe extern "C" fn boringssl_self_test_rsa() -> libc::c_int {
    static mut kRSASignPlaintext: [uint8_t; 32] = [
        0xd2 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
    ];
    static mut kRSASignSignature: [uint8_t; 256] = [
        0xb7 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
    ];
    let mut sig_len: libc::c_uint = 0;
    static mut kRSAVerifyPlaintext: [uint8_t; 32] = [
        0x9 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
    ];
    static mut kRSAVerifySignature: [uint8_t; 256] = [
        0xc5 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
    ];
    let mut ret: libc::c_int = 0 as libc::c_int;
    let mut output: [uint8_t; 256] = [0; 256];
    let rsa_key: *mut RSA = self_test_rsa_key();
    if rsa_key.is_null() {
        fprintf(
            stderr,
            b"RSA key construction failed\n\0" as *const u8 as *const libc::c_char,
        );
    } else {
        (*rsa_key).flags |= 8 as libc::c_int;
        sig_len = 0;
        if !(rsa_digestsign_no_self_test(
            EVP_sha256(),
            kRSASignPlaintext.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
            output.as_mut_ptr(),
            &mut sig_len,
            rsa_key,
        ) == 0
            || check_test(
                kRSASignSignature.as_ptr() as *const libc::c_void,
                output.as_mut_ptr() as *const libc::c_void,
                ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
                b"RSA-sign KAT\0" as *const u8 as *const libc::c_char,
            ) == 0)
        {
            if rsa_digestverify_no_self_test(
                EVP_sha256(),
                kRSAVerifyPlaintext.as_ptr(),
                ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                kRSAVerifySignature.as_ptr(),
                ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
                rsa_key,
            ) == 0
            {
                AWS_LC_FIPS_failure(
                    b"RSA-verify KAT failed\0" as *const u8 as *const libc::c_char,
                );
            } else {
                ret = 1 as libc::c_int;
            }
        }
    }
    RSA_free(rsa_key);
    return ret;
}
#[inline(never)]
unsafe extern "C" fn boringssl_self_test_ecc() -> libc::c_int {
    static mut kECDSASignPlaintext: [uint8_t; 32] = [
        0x1e as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
    ];
    static mut kECDSASignSig: [uint8_t; 64] = [
        0x67 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
    ];
    let mut ecdsa_k: [uint8_t; 32] = [0; 32];
    let mut ecdsa_sign_output: [uint8_t; 64] = [0; 64];
    static mut kECDSAVerifyPlaintext: [uint8_t; 32] = [
        0x78 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
    ];
    static mut kECDSAVerifySig: [uint8_t; 64] = [
        0x67 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
    ];
    static mut kP256Point: [uint8_t; 65] = [
        0x4 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
    ];
    static mut kP256Scalar: [uint8_t; 32] = [
        0xe7 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
    ];
    static mut kP256PointResult: [uint8_t; 65] = [
        0x4 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
    ];
    let mut ec_group: *const EC_GROUP = 0 as *const EC_GROUP;
    let mut z_comp_result: [uint8_t; 65] = [0; 65];
    let mut ret: libc::c_int = 0 as libc::c_int;
    let mut ec_key: *mut EC_KEY = 0 as *mut EC_KEY;
    let mut ec_point_in: *mut EC_POINT = 0 as *mut EC_POINT;
    let mut ec_point_out: *mut EC_POINT = 0 as *mut EC_POINT;
    let mut ec_scalar: *mut BIGNUM = 0 as *mut BIGNUM;
    let mut sig: *mut ECDSA_SIG = 0 as *mut ECDSA_SIG;
    ec_key = self_test_ecdsa_key();
    if ec_key.is_null() {
        fprintf(stderr, b"ECDSA KeyGen failed\n\0" as *const u8 as *const libc::c_char);
    } else {
        ecdsa_k = [
            0 as libc::c_int as uint8_t,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
        ];
        ecdsa_k[31 as libc::c_int as usize] = 42 as libc::c_int as uint8_t;
        sig = ecdsa_digestsign_no_self_test(
            EVP_sha256(),
            kECDSASignPlaintext.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
            ec_key,
            ecdsa_k.as_mut_ptr(),
            ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
        );
        ecdsa_sign_output = [0; 64];
        if sig.is_null()
            || serialize_ecdsa_sig(
                ecdsa_sign_output.as_mut_ptr(),
                ::core::mem::size_of::<[uint8_t; 64]>() as libc::c_ulong,
                sig,
            ) == 0
            || check_test(
                kECDSASignSig.as_ptr() as *const libc::c_void,
                ecdsa_sign_output.as_mut_ptr() as *const libc::c_void,
                ::core::mem::size_of::<[uint8_t; 64]>() as libc::c_ulong,
                b"ECDSA-sign signature\0" as *const u8 as *const libc::c_char,
            ) == 0
        {
            AWS_LC_FIPS_failure(
                b"ECDSA-sign KAT failed\0" as *const u8 as *const libc::c_char,
            );
        } else {
            ECDSA_SIG_free(sig);
            sig = parse_ecdsa_sig(
                kECDSAVerifySig.as_ptr(),
                ::core::mem::size_of::<[uint8_t; 64]>() as libc::c_ulong,
            );
            if sig.is_null()
                || ecdsa_digestverify_no_self_test(
                    EVP_sha256(),
                    kECDSAVerifyPlaintext.as_ptr(),
                    ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                    sig,
                    ec_key,
                ) == 0
            {
                AWS_LC_FIPS_failure(
                    b"ECDSA-verify KAT failed\0" as *const u8 as *const libc::c_char,
                );
            } else {
                ec_group = EC_group_p256();
                ec_point_in = EC_POINT_new(ec_group);
                ec_point_out = EC_POINT_new(ec_group);
                ec_scalar = BN_new();
                z_comp_result = [
                    0 as libc::c_int as uint8_t,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                ];
                if !(ec_point_in.is_null() || ec_point_out.is_null()
                    || ec_scalar.is_null()
                    || EC_POINT_oct2point(
                        ec_group,
                        ec_point_in,
                        kP256Point.as_ptr(),
                        ::core::mem::size_of::<[uint8_t; 65]>() as libc::c_ulong,
                        0 as *mut BN_CTX,
                    ) == 0
                    || (BN_bin2bn(
                        kP256Scalar.as_ptr(),
                        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                        ec_scalar,
                    ))
                        .is_null()
                    || ec_point_mul_no_self_test(
                        ec_group,
                        ec_point_out,
                        0 as *const BIGNUM,
                        ec_point_in,
                        ec_scalar,
                        0 as *mut BN_CTX,
                    ) == 0
                    || EC_POINT_point2oct(
                        ec_group,
                        ec_point_out,
                        POINT_CONVERSION_UNCOMPRESSED,
                        z_comp_result.as_mut_ptr(),
                        ::core::mem::size_of::<[uint8_t; 65]>() as libc::c_ulong,
                        0 as *mut BN_CTX,
                    ) == 0
                    || check_test(
                        kP256PointResult.as_ptr() as *const libc::c_void,
                        z_comp_result.as_mut_ptr() as *const libc::c_void,
                        ::core::mem::size_of::<[uint8_t; 65]>() as libc::c_ulong,
                        b"Z-computation\0" as *const u8 as *const libc::c_char,
                    ) == 0)
                {
                    ret = 1 as libc::c_int;
                }
            }
        }
    }
    EC_KEY_free(ec_key);
    EC_POINT_free(ec_point_in);
    EC_POINT_free(ec_point_out);
    BN_free(ec_scalar);
    ECDSA_SIG_free(sig);
    return ret;
}
#[inline(never)]
unsafe extern "C" fn boringssl_self_test_ffdh() -> libc::c_int {
    let mut fb_dh_out: [uint8_t; 256] = [0; 256];
    let mut ret: libc::c_int = 0 as libc::c_int;
    let mut dh: *mut DH = 0 as *mut DH;
    let mut fb_dh: *mut DH = 0 as *mut DH;
    let mut ffdhe2048_value: *mut BIGNUM = 0 as *mut BIGNUM;
    let mut fb_peers_key: *mut BIGNUM = 0 as *mut BIGNUM;
    static mut kFFDHE2048PublicValueData: [BN_ULONG; 32] = [
        (0x187be36b as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0xd38a4fa1 as libc::c_uint as BN_ULONG,
        (0xa152f39 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0x6458f3b8 as libc::c_int as BN_ULONG,
        (0x570187e as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0xc422eeb7 as libc::c_uint as BN_ULONG,
        (0x18af7482 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0x91173f2a as libc::c_uint as BN_ULONG,
        (0xe9fdac6a as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0xcff4eaaa as libc::c_uint as BN_ULONG,
        (0xf6afebb7 as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0x6e589d6c as libc::c_int as BN_ULONG,
        (0xf92f8e9a as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0xb7e33fb0 as libc::c_uint as BN_ULONG,
        (0x70acf2aa as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0x4cf36ddd as libc::c_int as BN_ULONG,
        (0x561ab426 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0xd07137fd as libc::c_uint as BN_ULONG,
        (0x5f57d037 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0x430ee91e as libc::c_int as BN_ULONG,
        (0xe3e768c8 as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0x60d10b8a as libc::c_int as BN_ULONG,
        (0xb14884d8 as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0xa18af8ce as libc::c_uint as BN_ULONG,
        (0xf8a98014 as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0xa12b74e4 as libc::c_uint as BN_ULONG,
        (0x748d407c as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0x3437b7a8 as libc::c_int as BN_ULONG,
        (0x627588c4 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0x9875d5a7 as libc::c_uint as BN_ULONG,
        (0xdd24a127 as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0x53c8f09d as libc::c_int as BN_ULONG,
        (0x85a997d5 as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0xcd51aec as libc::c_int as BN_ULONG,
        (0x44f0c619 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0xce348458 as libc::c_uint as BN_ULONG,
        (0x9b894b24 as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0x5f6b69a1 as libc::c_int as BN_ULONG,
        (0xae1302f2 as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0xf6d4777e as libc::c_uint as BN_ULONG,
        (0xe6678eeb as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0x375db18e as libc::c_int as BN_ULONG,
        (0x2674e1d6 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0x4fbcbdc8 as libc::c_int as BN_ULONG,
        (0xb297a823 as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0x6fa93d28 as libc::c_int as BN_ULONG,
        (0x6a12fb70 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0x7c8c0510 as libc::c_int as BN_ULONG,
        (0x5c6d1aeb as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0xdb06f65b as libc::c_uint as BN_ULONG,
        (0xe8c2954e as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0x4c1804ca as libc::c_int as BN_ULONG,
        (0x6bdeac1 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0xf5500fa7 as libc::c_uint as BN_ULONG,
        (0x6a315604 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0x189cd76b as libc::c_int as BN_ULONG,
        (0xbae7b0b3 as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0x6e362dc0 as libc::c_int as BN_ULONG,
        (0xa57c73bd as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0xdc70fb82 as libc::c_uint as BN_ULONG,
        (0xfaff50d2 as libc::c_uint as BN_ULONG) << 32 as libc::c_int
            | 0x9d573457 as libc::c_uint as BN_ULONG,
        (0x352bd399 as libc::c_int as BN_ULONG) << 32 as libc::c_int
            | 0xbe84058e as libc::c_uint as BN_ULONG,
    ];
    static mut kDHOutput: [uint8_t; 256] = [
        0x2a as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
    ];
    let kDH_fb_peer_public: [uint8_t; 256] = [
        0x8f as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
    ];
    let kDH_fb_z: [uint8_t; 256] = [
        0x8a as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
    ];
    ffdhe2048_value = BN_new();
    if !ffdhe2048_value.is_null() {
        bn_set_static_words(
            ffdhe2048_value,
            kFFDHE2048PublicValueData.as_ptr(),
            (::core::mem::size_of::<[BN_ULONG; 32]>() as libc::c_ulong)
                .wrapping_div(::core::mem::size_of::<BN_ULONG>() as libc::c_ulong),
        );
    }
    dh = self_test_dh();
    let mut dh_out: [uint8_t; 256] = [0; 256];
    if !(dh.is_null() || ffdhe2048_value.is_null()
        || ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong
            != DH_size(dh) as libc::c_ulong
        || dh_compute_key_padded_no_self_test(dh_out.as_mut_ptr(), ffdhe2048_value, dh)
            as libc::c_ulong != ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong
        || check_test(
            kDHOutput.as_ptr() as *const libc::c_void,
            dh_out.as_mut_ptr() as *const libc::c_void,
            ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
            b"FFC DH\0" as *const u8 as *const libc::c_char,
        ) == 0)
    {
        set_bignum(
            &mut fb_peers_key,
            kDH_fb_peer_public.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
        );
        fb_dh = self_test_ffc_dh_fb_key();
        fb_dh_out = [0; 256];
        if !(fb_dh.is_null() || fb_peers_key.is_null()
            || ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong
                != DH_size(fb_dh) as libc::c_ulong
            || dh_compute_key_padded_no_self_test(
                fb_dh_out.as_mut_ptr(),
                fb_peers_key,
                fb_dh,
            ) as libc::c_ulong
                != ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong
            || check_test(
                kDH_fb_z.as_ptr() as *const libc::c_void,
                fb_dh_out.as_mut_ptr() as *const libc::c_void,
                ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
                b"FFC DH FB\0" as *const u8 as *const libc::c_char,
            ) == 0)
        {
            ret = 1 as libc::c_int;
        }
    }
    DH_free(dh);
    BN_free(ffdhe2048_value);
    DH_free(fb_dh);
    BN_free(fb_peers_key);
    return ret;
}
#[inline(never)]
unsafe extern "C" fn boringssl_self_test_ml_kem() -> libc::c_int {
    static mut kKeyGenDKSeed: [uint8_t; 64] = [
        0xec as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
    ];
    static mut kKeyGenDK: [uint8_t; 1632] = [
        0x88 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
    ];
    static mut kEncapEK: [uint8_t; 800] = [
        0x57 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
    ];
    static mut kEncapM: [uint8_t; 32] = [
        0x2c as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
    ];
    static mut kEncapCiphertext: [uint8_t; 768] = [
        0x43 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
    ];
    static mut kEncapSharedSecret: [uint8_t; 32] = [
        0xa7 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
    ];
    let mut ciphertext_len: size_t = 0;
    let mut shared_secret_len: size_t = 0;
    let mut ciphertext: [uint8_t; 768] = [0; 768];
    let mut shared_secret: [uint8_t; 32] = [0; 32];
    static mut kDecapDK: [uint8_t; 1632] = [
        0x73 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
    ];
    static mut kDecapCiphertext: [uint8_t; 768] = [
        0xaf as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
    ];
    static mut kDecapSharedSecret: [uint8_t; 32] = [
        0xbe as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
    ];
    static mut kDecapCiphertextRejection: [uint8_t; 768] = [
        0x18 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
    ];
    static mut kDecapSharedSecretRejection: [uint8_t; 32] = [
        0x98 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
    ];
    let mut ret: libc::c_int = 0 as libc::c_int;
    static mut kKeyGenEKSeed: [uint8_t; 64] = [
        0xf8 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
    ];
    static mut kKeyGenEK: [uint8_t; 800] = [
        0xa7 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
    ];
    let mut public_len: size_t = 800 as libc::c_int as size_t;
    let mut secret_len: size_t = 1632 as libc::c_int as size_t;
    let mut keygen_decaps: [uint8_t; 1632] = [
        0 as libc::c_int as uint8_t,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ];
    let mut keygen_encaps: [uint8_t; 800] = [
        0 as libc::c_int as uint8_t,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ];
    if !(ml_kem_512_keypair_deterministic_no_self_test(
        keygen_encaps.as_mut_ptr(),
        &mut public_len,
        keygen_decaps.as_mut_ptr(),
        &mut secret_len,
        kKeyGenEKSeed.as_ptr(),
    ) != 0
        || check_test(
            kKeyGenEK.as_ptr() as *const libc::c_void,
            keygen_encaps.as_mut_ptr() as *const libc::c_void,
            ::core::mem::size_of::<[uint8_t; 800]>() as libc::c_ulong,
            b"ML-KEM-keyGen-encaps\0" as *const u8 as *const libc::c_char,
        ) == 0)
    {
        public_len = 800 as libc::c_int as size_t;
        secret_len = 1632 as libc::c_int as size_t;
        if !(ml_kem_512_keypair_deterministic_no_self_test(
            keygen_encaps.as_mut_ptr(),
            &mut public_len,
            keygen_decaps.as_mut_ptr(),
            &mut secret_len,
            kKeyGenDKSeed.as_ptr(),
        ) != 0
            || check_test(
                kKeyGenDK.as_ptr() as *const libc::c_void,
                keygen_decaps.as_mut_ptr() as *const libc::c_void,
                ::core::mem::size_of::<[uint8_t; 1632]>() as libc::c_ulong,
                b"ML-KEM-keyGen-decaps\0" as *const u8 as *const libc::c_char,
            ) == 0)
        {
            ciphertext_len = 768 as libc::c_int as size_t;
            shared_secret_len = 32 as libc::c_int as size_t;
            ciphertext = [
                0 as libc::c_int as uint8_t,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
            ];
            shared_secret = [
                0 as libc::c_int as uint8_t,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
            ];
            if !(ml_kem_512_encapsulate_deterministic_no_self_test(
                ciphertext.as_mut_ptr(),
                &mut ciphertext_len,
                shared_secret.as_mut_ptr(),
                &mut shared_secret_len,
                kEncapEK.as_ptr(),
                kEncapM.as_ptr(),
            ) != 0
                || check_test(
                    kEncapCiphertext.as_ptr() as *const libc::c_void,
                    ciphertext.as_mut_ptr() as *const libc::c_void,
                    ::core::mem::size_of::<[uint8_t; 768]>() as libc::c_ulong,
                    b"ML-KEM-encapsulate-ciphertext\0" as *const u8
                        as *const libc::c_char,
                ) == 0
                || check_test(
                    kEncapSharedSecret.as_ptr() as *const libc::c_void,
                    shared_secret.as_mut_ptr() as *const libc::c_void,
                    ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                    b"ML-KEM-encapsulate-shared-secret\0" as *const u8
                        as *const libc::c_char,
                ) == 0)
            {
                shared_secret_len = 32 as libc::c_int as size_t;
                if !(ml_kem_512_decapsulate_no_self_test(
                    shared_secret.as_mut_ptr(),
                    &mut shared_secret_len,
                    kDecapCiphertext.as_ptr(),
                    kDecapDK.as_ptr(),
                ) != 0
                    || check_test(
                        kDecapSharedSecret.as_ptr() as *const libc::c_void,
                        shared_secret.as_mut_ptr() as *const libc::c_void,
                        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                        b"ML-KEM decapsulate non-rejection\0" as *const u8
                            as *const libc::c_char,
                    ) == 0
                    || ml_kem_512_decapsulate_no_self_test(
                        shared_secret.as_mut_ptr(),
                        &mut shared_secret_len,
                        kDecapCiphertextRejection.as_ptr(),
                        kDecapDK.as_ptr(),
                    ) != 0
                    || check_test(
                        kDecapSharedSecretRejection.as_ptr() as *const libc::c_void,
                        shared_secret.as_mut_ptr() as *const libc::c_void,
                        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                        b"ML-KEM decapsulate implicit rejection\0" as *const u8
                            as *const libc::c_char,
                    ) == 0)
                {
                    ret = 1 as libc::c_int;
                }
            }
        }
    }
    return ret;
}
#[inline(never)]
unsafe extern "C" fn boringssl_self_test_ml_dsa() -> libc::c_int {
    let mut signature: [uint8_t; 2420] = [0; 2420];
    let mut sig_len: size_t = 0;
    let mut mlen_int: size_t = 0;
    let mut ret: libc::c_int = 0 as libc::c_int;
    static mut kMLDSAKeyGenSeed: [uint8_t; 32] = [
        0x4b as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
    ];
    static mut kMLDSAKeyGenPublicKey: [uint8_t; 1312] = [
        0xad as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
    ];
    static mut kMLDSAKeyGenPrivateKey: [uint8_t; 2560] = [
        0xad as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
    ];
    static mut kMLDSASignPlaintext: [uint8_t; 32] = [
        0x4a as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
    ];
    static mut kMLDSAVerifyPlaintext: [uint8_t; 32] = [
        0x83 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
    ];
    static mut kMLDSASigGenSeed: [uint8_t; 32] = [
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
    ];
    static mut kMLDSASignSignature: [uint8_t; 2420] = [
        0x34 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
    ];
    static mut kMLDSAVerifySignature: [uint8_t; 2420] = [
        0x4b as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
    ];
    let mut public_key: [uint8_t; 1312] = [
        0 as libc::c_int as uint8_t,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ];
    let mut private_key: [uint8_t; 2560] = [
        0 as libc::c_int as uint8_t,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ];
    if !(ml_dsa_44_keypair_internal_no_self_test(
        public_key.as_mut_ptr(),
        private_key.as_mut_ptr(),
        kMLDSAKeyGenSeed.as_ptr(),
    ) == 0
        || check_test(
            kMLDSAKeyGenPublicKey.as_ptr() as *const libc::c_void,
            public_key.as_mut_ptr() as *const libc::c_void,
            ::core::mem::size_of::<[uint8_t; 1312]>() as libc::c_ulong,
            b"ML-DSA-keyGen\0" as *const u8 as *const libc::c_char,
        ) == 0
        || check_test(
            kMLDSAKeyGenPrivateKey.as_ptr() as *const libc::c_void,
            private_key.as_mut_ptr() as *const libc::c_void,
            ::core::mem::size_of::<[uint8_t; 2560]>() as libc::c_ulong,
            b"ML-DSA-keyGen\0" as *const u8 as *const libc::c_char,
        ) == 0)
    {
        signature = [
            0 as libc::c_int as uint8_t,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
        ];
        sig_len = 2420 as libc::c_int as size_t;
        mlen_int = 32 as libc::c_int as size_t;
        if !(ml_dsa_44_sign_internal_no_self_test(
            private_key.as_mut_ptr(),
            signature.as_mut_ptr(),
            &mut sig_len,
            kMLDSASignPlaintext.as_ptr(),
            mlen_int,
            0 as *const uint8_t,
            0 as libc::c_int as size_t,
            kMLDSASigGenSeed.as_ptr(),
        ) == 0
            || check_test(
                kMLDSASignSignature.as_ptr() as *const libc::c_void,
                signature.as_mut_ptr() as *const libc::c_void,
                ::core::mem::size_of::<[uint8_t; 2420]>() as libc::c_ulong,
                b"ML-DSA-sign\0" as *const u8 as *const libc::c_char,
            ) == 0)
        {
            if ml_dsa_44_verify_internal_no_self_test(
                public_key.as_mut_ptr(),
                kMLDSAVerifySignature.as_ptr(),
                sig_len,
                kMLDSAVerifyPlaintext.as_ptr(),
                mlen_int,
                0 as *const uint8_t,
                0 as libc::c_int as size_t,
            ) == 0
            {
                AWS_LC_FIPS_failure(
                    b"ML-DSA-verify failed\0" as *const u8 as *const libc::c_char,
                );
            } else {
                ret = 1 as libc::c_int;
            }
        }
    }
    return ret;
}
#[inline(never)]
unsafe extern "C" fn boringssl_self_test_eddsa() -> libc::c_int {
    static mut kEd25519VerifyMessage: [uint8_t; 32] = [
        0x71 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
    ];
    static mut kEd25519VerifySignature: [uint8_t; 64] = [
        0x44 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
    ];
    let mut ret: libc::c_int = 0 as libc::c_int;
    static mut kEd25519PrivateKey: [uint8_t; 32] = [
        0xb3 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
    ];
    static mut kEd25519PublicKey: [uint8_t; 32] = [
        0xe7 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
    ];
    let mut ed25519_private_key: [uint8_t; 64] = [
        0 as libc::c_int as uint8_t,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ];
    OPENSSL_memcpy(
        ed25519_private_key.as_mut_ptr() as *mut libc::c_void,
        kEd25519PrivateKey.as_ptr() as *const libc::c_void,
        32 as libc::c_int as size_t,
    );
    OPENSSL_memcpy(
        ed25519_private_key.as_mut_ptr().offset(32 as libc::c_int as isize)
            as *mut libc::c_void,
        kEd25519PublicKey.as_ptr() as *const libc::c_void,
        32 as libc::c_int as size_t,
    );
    let mut ed25519_out_sig: [uint8_t; 64] = [
        0 as libc::c_int as uint8_t,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ];
    static mut kEd25519SignMessage: [uint8_t; 32] = [
        0x19 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
    ];
    static mut kEd25519SignSignature: [uint8_t; 64] = [
        0xa8 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
    ];
    if ED25519_sign_no_self_test(
        ed25519_out_sig.as_mut_ptr(),
        kEd25519SignMessage.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
        ed25519_private_key.as_mut_ptr() as *const uint8_t,
    ) == 0
        || check_test(
            kEd25519SignSignature.as_ptr() as *const libc::c_void,
            ed25519_out_sig.as_mut_ptr() as *const libc::c_void,
            64 as libc::c_int as size_t,
            b"ED25519-sign\0" as *const u8 as *const libc::c_char,
        ) == 0
    {
        AWS_LC_FIPS_failure(
            b"ED25519-sign failed\0" as *const u8 as *const libc::c_char,
        );
    } else if ED25519_verify_no_self_test(
        kEd25519VerifyMessage.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
        kEd25519VerifySignature.as_ptr(),
        kEd25519PublicKey.as_ptr(),
    ) == 0
    {
        AWS_LC_FIPS_failure(
            b"ED25519-verify failed\0" as *const u8 as *const libc::c_char,
        );
    } else {
        ret = 1 as libc::c_int;
    }
    return ret;
}
#[inline(never)]
unsafe extern "C" fn boringssl_self_test_hasheddsa() -> libc::c_int {
    static mut kEd25519VerifyMessage: [uint8_t; 32] = [
        0x36 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xd4 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
    ];
    static mut kEd25519VerifySignature: [uint8_t; 64] = [
        0x10 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
    ];
    let mut ret: libc::c_int = 0 as libc::c_int;
    static mut kEd25519PrivateKey: [uint8_t; 32] = [
        0xc3 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
    ];
    static mut kEd25519PublicKey: [uint8_t; 32] = [
        0x63 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
    ];
    static mut kEd25519Context: [uint8_t; 32] = [
        0x76 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
    ];
    static mut kEd25519SignMessage: [uint8_t; 32] = [
        0xf9 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
    ];
    static mut kEd25519SignSignature: [uint8_t; 64] = [
        0xb as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
    ];
    let mut ed25519_private_key: [uint8_t; 64] = [
        0 as libc::c_int as uint8_t,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ];
    OPENSSL_memcpy(
        ed25519_private_key.as_mut_ptr() as *mut libc::c_void,
        kEd25519PrivateKey.as_ptr() as *const libc::c_void,
        32 as libc::c_int as size_t,
    );
    OPENSSL_memcpy(
        ed25519_private_key.as_mut_ptr().offset(32 as libc::c_int as isize)
            as *mut libc::c_void,
        kEd25519PublicKey.as_ptr() as *const libc::c_void,
        32 as libc::c_int as size_t,
    );
    let mut ed25519_out_sig: [uint8_t; 64] = [
        0 as libc::c_int as uint8_t,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ];
    if !(ED25519ph_sign_no_self_test(
        &mut *ed25519_out_sig.as_mut_ptr().offset(0 as libc::c_int as isize),
        kEd25519SignMessage.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
        ed25519_private_key.as_mut_ptr() as *const uint8_t,
        kEd25519Context.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
    ) == 0
        || check_test(
            kEd25519SignSignature.as_ptr() as *const libc::c_void,
            ed25519_out_sig.as_mut_ptr() as *const libc::c_void,
            64 as libc::c_int as size_t,
            b"ED25519ph-sign\0" as *const u8 as *const libc::c_char,
        ) == 0)
    {
        if ED25519ph_verify_no_self_test(
            kEd25519VerifyMessage.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
            kEd25519VerifySignature.as_ptr(),
            kEd25519PublicKey.as_ptr(),
            kEd25519Context.as_ptr(),
            ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
        ) == 0
        {
            AWS_LC_FIPS_failure(
                b"ED25519ph-verify failed\0" as *const u8 as *const libc::c_char,
            );
        } else {
            ret = 1 as libc::c_int;
        }
    }
    return ret;
}
#[unsafe(no_mangle)]
#[inline(never)]
pub unsafe extern "C" fn boringssl_self_test_sha256() -> libc::c_int {
    static mut kInput: [uint8_t; 16] = [
        0xff as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
    ];
    static mut kPlaintextSHA256: [uint8_t; 32] = [
        0x7f as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
    ];
    let mut output: [uint8_t; 32] = [0; 32];
    SHA256(
        kInput.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
        output.as_mut_ptr(),
    );
    return check_test(
        kPlaintextSHA256.as_ptr() as *const libc::c_void,
        output.as_mut_ptr() as *const libc::c_void,
        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
        b"SHA-256 KAT\0" as *const u8 as *const libc::c_char,
    );
}
#[inline(never)]
unsafe extern "C" fn boringssl_self_test_sha512() -> libc::c_int {
    static mut kInput: [uint8_t; 16] = [
        0x21 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
    ];
    static mut kPlaintextSHA512: [uint8_t; 64] = [
        0x29 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
    ];
    let mut output: [uint8_t; 64] = [0; 64];
    SHA512(
        kInput.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
        output.as_mut_ptr(),
    );
    return check_test(
        kPlaintextSHA512.as_ptr() as *const libc::c_void,
        output.as_mut_ptr() as *const libc::c_void,
        ::core::mem::size_of::<[uint8_t; 64]>() as libc::c_ulong,
        b"SHA-512 KAT\0" as *const u8 as *const libc::c_char,
    );
}
#[unsafe(no_mangle)]
#[inline(never)]
pub unsafe extern "C" fn boringssl_self_test_hmac_sha256() -> libc::c_int {
    static mut kInput: [uint8_t; 16] = [
        0xda as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
    ];
    static mut kPlaintextHMACSHA256: [uint8_t; 32] = [
        0x36 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
    ];
    let mut output: [uint8_t; 64] = [0; 64];
    let mut output_len: libc::c_uint = 0 as libc::c_int as libc::c_uint;
    HMAC(
        EVP_sha256(),
        kInput.as_ptr() as *const libc::c_void,
        ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
        kInput.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
        output.as_mut_ptr(),
        &mut output_len,
    );
    return (output_len as libc::c_ulong
        == ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong
        && check_test(
            kPlaintextHMACSHA256.as_ptr() as *const libc::c_void,
            output.as_mut_ptr() as *const libc::c_void,
            ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
            b"HMAC-SHA-256 KAT\0" as *const u8 as *const libc::c_char,
        ) != 0) as libc::c_int;
}
#[inline(never)]
unsafe extern "C" fn boringssl_self_test_hkdf_sha256() -> libc::c_int {
    static mut kHKDF_ikm_tc1: [uint8_t; 32] = [
        0x58 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x73 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
    ];
    static mut kHKDF_salt_tc1: [uint8_t; 13] = [
        0 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
    ];
    static mut kHKDF_info_tc1: [uint8_t; 10] = [
        0xf0 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
    ];
    static mut kHKDF_okm_tc1_sha256: [uint8_t; 42] = [
        0xca as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
    ];
    let mut output: [uint8_t; 42] = [0; 42];
    HKDF(
        output.as_mut_ptr(),
        ::core::mem::size_of::<[uint8_t; 42]>() as libc::c_ulong,
        EVP_sha256(),
        kHKDF_ikm_tc1.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
        kHKDF_salt_tc1.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 13]>() as libc::c_ulong,
        kHKDF_info_tc1.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 10]>() as libc::c_ulong,
    );
    return check_test(
        kHKDF_okm_tc1_sha256.as_ptr() as *const libc::c_void,
        output.as_mut_ptr() as *const libc::c_void,
        ::core::mem::size_of::<[uint8_t; 42]>() as libc::c_ulong,
        b"HKDF-SHA-256 KAT\0" as *const u8 as *const libc::c_char,
    );
}
#[inline(never)]
unsafe extern "C" fn boringssl_self_test_sha3_256() -> libc::c_int {
    static mut kInput: [uint8_t; 16] = [
        0xd8 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
    ];
    static mut kPlaintextSHA3_256: [uint8_t; 32] = [
        0xb8 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
    ];
    let mut output: [uint8_t; 32] = [0; 32];
    SHA3_256(
        kInput.as_ptr(),
        ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
        output.as_mut_ptr(),
    );
    return check_test(
        kPlaintextSHA3_256.as_ptr() as *const libc::c_void,
        output.as_mut_ptr() as *const libc::c_void,
        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
        b"SHA3-256 KAT\0" as *const u8 as *const libc::c_char,
    );
}
#[inline(never)]
unsafe extern "C" fn boringssl_self_test_fast() -> libc::c_int {
    static mut kAESCBCDecCiphertext: [uint8_t; 32] = [
        0x34 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
    ];
    static mut kAESCBCDecPlaintext: [uint8_t; 32] = [
        0x51 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xdc as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
    ];
    let mut out_len: size_t = 0;
    let mut nonce: [uint8_t; 24] = [0; 24];
    static mut kAESGCMEncPlaintext: [uint8_t; 32] = [
        0x8f as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
    ];
    static mut kAESGCMCiphertext: [uint8_t; 48] = [
        0x87 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
    ];
    static mut kAESGCMDecCiphertext: [uint8_t; 48] = [
        0x35 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xd7 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x20 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
    ];
    static mut kAESGCMDecPlaintext: [uint8_t; 32] = [
        0x3d as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
    ];
    static mut kSHA1Input: [uint8_t; 16] = [
        0x13 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
    ];
    static mut kSHA1Digest: [uint8_t; 20] = [
        0x94 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
    ];
    static mut kDRBGEntropy: [uint8_t; 48] = [
        0xc4 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
    ];
    static mut kDRBGPersonalization: [uint8_t; 18] = [
        'B' as i32 as uint8_t,
        'C' as i32 as uint8_t,
        'M' as i32 as uint8_t,
        'P' as i32 as uint8_t,
        'e' as i32 as uint8_t,
        'r' as i32 as uint8_t,
        's' as i32 as uint8_t,
        'o' as i32 as uint8_t,
        'n' as i32 as uint8_t,
        'a' as i32 as uint8_t,
        'l' as i32 as uint8_t,
        'i' as i32 as uint8_t,
        'z' as i32 as uint8_t,
        'a' as i32 as uint8_t,
        't' as i32 as uint8_t,
        'i' as i32 as uint8_t,
        'o' as i32 as uint8_t,
        'n' as i32 as uint8_t,
    ];
    static mut kDRBGAD: [uint8_t; 16] = [
        'B' as i32 as uint8_t,
        'C' as i32 as uint8_t,
        'M' as i32 as uint8_t,
        ' ' as i32 as uint8_t,
        'D' as i32 as uint8_t,
        'R' as i32 as uint8_t,
        'B' as i32 as uint8_t,
        'G' as i32 as uint8_t,
        ' ' as i32 as uint8_t,
        'K' as i32 as uint8_t,
        'A' as i32 as uint8_t,
        'T' as i32 as uint8_t,
        ' ' as i32 as uint8_t,
        'A' as i32 as uint8_t,
        'D' as i32 as uint8_t,
        ' ' as i32 as uint8_t,
    ];
    static mut kDRBGOutput: [uint8_t; 64] = [
        0x19 as libc::c_int as uint8_t,
        0x1f as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x56 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x3b as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xfc as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x3f as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xed as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x67 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x97 as libc::c_int as uint8_t,
    ];
    static mut kDRBGEntropy2: [uint8_t; 48] = [
        0xc7 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0xfe as libc::c_int as uint8_t,
    ];
    static mut kDRBGReseedOutput: [uint8_t; 64] = [
        0 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0xaa as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x4b as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x7c as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0x4a as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
    ];
    let mut drbg: CTR_DRBG_STATE = ctr_drbg_state_st {
        ks: aes_key_st {
            rd_key: [0; 60],
            rounds: 0,
        },
        block: None,
        ctr: None,
        counter: [0; 16],
        reseed_counter: 0,
    };
    let mut kZeroDRBG: CTR_DRBG_STATE = ctr_drbg_state_st {
        ks: aes_key_st {
            rd_key: [0; 60],
            rounds: 0,
        },
        block: None,
        ctr: None,
        counter: [0; 16],
        reseed_counter: 0,
    };
    static mut kTLSSecret: [uint8_t; 32] = [
        0xab as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x99 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0xc4 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
    ];
    static mut kTLSLabel: [libc::c_char; 15] = unsafe {
        *::core::mem::transmute::<&[u8; 15], &[libc::c_char; 15]>(b"FIPS self test\0")
    };
    static mut kTLSSeed1: [uint8_t; 16] = [
        0x8f as libc::c_int as uint8_t,
        0xd as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x90 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x6d as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
    ];
    static mut kTLSSeed2: [uint8_t; 16] = [
        0x7d as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x1a as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x21 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
    ];
    static mut kTLSOutput: [uint8_t; 32] = [
        0xe2 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xc2 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xeb as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x7d as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0x60 as libc::c_int as uint8_t,
        0x5d as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x5 as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
    ];
    let mut tls_output: [uint8_t; 32] = [0; 32];
    static mut kPBKDF2Password: [uint8_t; 18] = [
        'A' as i32 as uint8_t,
        'W' as i32 as uint8_t,
        'S' as i32 as uint8_t,
        '-' as i32 as uint8_t,
        'L' as i32 as uint8_t,
        'C' as i32 as uint8_t,
        'F' as i32 as uint8_t,
        'I' as i32 as uint8_t,
        'P' as i32 as uint8_t,
        'S' as i32 as uint8_t,
        'p' as i32 as uint8_t,
        'a' as i32 as uint8_t,
        's' as i32 as uint8_t,
        's' as i32 as uint8_t,
        'w' as i32 as uint8_t,
        'o' as i32 as uint8_t,
        'r' as i32 as uint8_t,
        'd' as i32 as uint8_t,
    ];
    static mut kPBKDF2Salt: [uint8_t; 36] = [
        's' as i32 as uint8_t,
        'a' as i32 as uint8_t,
        'l' as i32 as uint8_t,
        't' as i32 as uint8_t,
        'S' as i32 as uint8_t,
        'A' as i32 as uint8_t,
        'L' as i32 as uint8_t,
        'T' as i32 as uint8_t,
        's' as i32 as uint8_t,
        'a' as i32 as uint8_t,
        'l' as i32 as uint8_t,
        't' as i32 as uint8_t,
        'S' as i32 as uint8_t,
        'A' as i32 as uint8_t,
        'L' as i32 as uint8_t,
        'T' as i32 as uint8_t,
        's' as i32 as uint8_t,
        'a' as i32 as uint8_t,
        'l' as i32 as uint8_t,
        't' as i32 as uint8_t,
        'S' as i32 as uint8_t,
        'A' as i32 as uint8_t,
        'L' as i32 as uint8_t,
        'T' as i32 as uint8_t,
        's' as i32 as uint8_t,
        'a' as i32 as uint8_t,
        'l' as i32 as uint8_t,
        't' as i32 as uint8_t,
        'S' as i32 as uint8_t,
        'A' as i32 as uint8_t,
        'L' as i32 as uint8_t,
        'T' as i32 as uint8_t,
        's' as i32 as uint8_t,
        'a' as i32 as uint8_t,
        'l' as i32 as uint8_t,
        't' as i32 as uint8_t,
    ];
    let mut kPBKDF2Iterations: libc::c_uint = 0;
    static mut kPBKDF2DerivedKey: [uint8_t; 25] = [
        0xc6 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xc9 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xc7 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
    ];
    let mut pbkdf2_output: [uint8_t; 25] = [0; 25];
    static mut kSSKDFDigestInfo: [uint8_t; 32] = [
        0xaf as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xea as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x1e as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0x95 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
    ];
    static mut kSSKDFDigestSharedSecret: [uint8_t; 51] = [
        0x39 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x9e as libc::c_int as uint8_t,
        0x87 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xec as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0x8f as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xdd as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xc3 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xf as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x47 as libc::c_int as uint8_t,
        0x8d as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x8c as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0xe4 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0xc as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x9b as libc::c_int as uint8_t,
        0xe9 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
    ];
    static mut kSSKDFDigestDerivedKey: [uint8_t; 256] = [
        0x5a as libc::c_int as uint8_t,
        0x2e as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0x4d as libc::c_int as uint8_t,
        0x16 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0x2c as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x39 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x48 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x54 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x53 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x49 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0xe5 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xee as libc::c_int as uint8_t,
        0xb9 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0x8b as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xb5 as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0x12 as libc::c_int as uint8_t,
        0x2 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0x82 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x65 as libc::c_int as uint8_t,
        0xd5 as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x58 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xa4 as libc::c_int as uint8_t,
        0x83 as libc::c_int as uint8_t,
        0x81 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0x9c as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0xa0 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x22 as libc::c_int as uint8_t,
        0xe1 as libc::c_int as uint8_t,
        0xc8 as libc::c_int as uint8_t,
        0x9d as libc::c_int as uint8_t,
        0x88 as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x5b as libc::c_int as uint8_t,
        0xab as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0x6 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x70 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x94 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xbc as libc::c_int as uint8_t,
        0x35 as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0x3c as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0xf1 as libc::c_int as uint8_t,
        0x61 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0x5a as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x71 as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x1 as libc::c_int as uint8_t,
        0xf6 as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x7 as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x84 as libc::c_int as uint8_t,
        0x76 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x98 as libc::c_int as uint8_t,
        0xd1 as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x4c as libc::c_int as uint8_t,
        0xca as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0x75 as libc::c_int as uint8_t,
        0x2d as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x74 as libc::c_int as uint8_t,
        0x27 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x66 as libc::c_int as uint8_t,
        0x28 as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x80 as libc::c_int as uint8_t,
        0x89 as libc::c_int as uint8_t,
        0x2a as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x14 as libc::c_int as uint8_t,
        0xa8 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0xe3 as libc::c_int as uint8_t,
        0x43 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x78 as libc::c_int as uint8_t,
        0xd0 as libc::c_int as uint8_t,
        0xda as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xde as libc::c_int as uint8_t,
        0x18 as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0xa9 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xf7 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0xc0 as libc::c_int as uint8_t,
        0x24 as libc::c_int as uint8_t,
        0x37 as libc::c_int as uint8_t,
        0x6b as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xcb as libc::c_int as uint8_t,
        0x34 as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x6e as libc::c_int as uint8_t,
        0x9f as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0x52 as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xb1 as libc::c_int as uint8_t,
        0xa2 as libc::c_int as uint8_t,
        0x6f as libc::c_int as uint8_t,
        0xa5 as libc::c_int as uint8_t,
    ];
    let mut sskdf_digest_output: [uint8_t; 256] = [0; 256];
    static mut kKBKDF_ctr_hmac_secret: [uint8_t; 32] = [
        0xdd as libc::c_int as uint8_t,
        0x1d as libc::c_int as uint8_t,
        0x91 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xd9 as libc::c_int as uint8_t,
        0xb as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x85 as libc::c_int as uint8_t,
        0x33 as libc::c_int as uint8_t,
        0xce as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x72 as libc::c_int as uint8_t,
        0xfb as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x31 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0xef as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xe6 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xcc as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xe2 as libc::c_int as uint8_t,
        0x38 as libc::c_int as uint8_t,
        0xaf as libc::c_int as uint8_t,
        0xe0 as libc::c_int as uint8_t,
    ];
    static mut kKBKDF_ctr_hmac_info: [uint8_t; 60] = [
        0x1 as libc::c_int as uint8_t,
        0x32 as libc::c_int as uint8_t,
        0x2b as libc::c_int as uint8_t,
        0x96 as libc::c_int as uint8_t,
        0xb3 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xcd as libc::c_int as uint8_t,
        0x19 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x79 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x4e as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0x5c as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x59 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0x1b as libc::c_int as uint8_t,
        0x1c as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0xb7 as libc::c_int as uint8_t,
        0xe7 as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x3e as libc::c_int as uint8_t,
        0x23 as libc::c_int as uint8_t,
        0x7e as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x64 as libc::c_int as uint8_t,
        0xa1 as libc::c_int as uint8_t,
        0x45 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xb2 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x51 as libc::c_int as uint8_t,
        0x7b as libc::c_int as uint8_t,
        0x8 as libc::c_int as uint8_t,
        0xf8 as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x3d as libc::c_int as uint8_t,
        0x3 as libc::c_int as uint8_t,
        0x15 as libc::c_int as uint8_t,
        0xbb as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0x11 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
        0xa as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xba as libc::c_int as uint8_t,
        0x17 as libc::c_int as uint8_t,
        0xf3 as libc::c_int as uint8_t,
        0xb4 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xfa as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
    ];
    static mut kKBKDF_ctr_hmac_output: [uint8_t; 16] = [
        0x10 as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0x42 as libc::c_int as uint8_t,
        0xbf as libc::c_int as uint8_t,
        0xb0 as libc::c_int as uint8_t,
        0xfd as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0x4 as libc::c_int as uint8_t,
        0x6c as libc::c_int as uint8_t,
        0xe as libc::c_int as uint8_t,
        0x29 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0xcf as libc::c_int as uint8_t,
        0xdb as libc::c_int as uint8_t,
        0xf0 as libc::c_int as uint8_t,
    ];
    let mut kbkdf_ctr_hmac_output: [uint8_t; 16] = [0; 16];
    static mut kAESKey: [uint8_t; 16] = [
        'B' as i32 as uint8_t,
        'o' as i32 as uint8_t,
        'r' as i32 as uint8_t,
        'i' as i32 as uint8_t,
        'n' as i32 as uint8_t,
        'g' as i32 as uint8_t,
        'C' as i32 as uint8_t,
        'r' as i32 as uint8_t,
        'y' as i32 as uint8_t,
        'p' as i32 as uint8_t,
        't' as i32 as uint8_t,
        'o' as i32 as uint8_t,
        ' ' as i32 as uint8_t,
        'K' as i32 as uint8_t,
        'e' as i32 as uint8_t,
        'y' as i32 as uint8_t,
    ];
    static mut kAESIV: [uint8_t; 16] = [
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
        0 as libc::c_int as uint8_t,
    ];
    let mut aead_ctx: EVP_AEAD_CTX = evp_aead_ctx_st {
        aead: 0 as *const EVP_AEAD,
        state: evp_aead_ctx_st_state {
            opaque: [0; 564],
        },
        state_offset: 0,
        tag_len: 0,
    };
    EVP_AEAD_CTX_zero(&mut aead_ctx);
    let mut ret: libc::c_int = 0 as libc::c_int;
    let mut aes_key: AES_KEY = aes_key_st {
        rd_key: [0; 60],
        rounds: 0,
    };
    let mut aes_iv: [uint8_t; 16] = [0; 16];
    let mut output: [uint8_t; 256] = [0; 256];
    static mut kAESCBCEncPlaintext: [uint8_t; 32] = [
        0x7 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0x9 as libc::c_int as uint8_t,
        0xa6 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0xac as libc::c_int as uint8_t,
        0x25 as libc::c_int as uint8_t,
        0x44 as libc::c_int as uint8_t,
        0x69 as libc::c_int as uint8_t,
        0x9a as libc::c_int as uint8_t,
        0xdf as libc::c_int as uint8_t,
        0x68 as libc::c_int as uint8_t,
        0x2f as libc::c_int as uint8_t,
        0xa3 as libc::c_int as uint8_t,
        0x77 as libc::c_int as uint8_t,
        0xf9 as libc::c_int as uint8_t,
        0xbe as libc::c_int as uint8_t,
        0x8a as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0xae as libc::c_int as uint8_t,
        0xf5 as libc::c_int as uint8_t,
        0x63 as libc::c_int as uint8_t,
        0xe8 as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x6a as libc::c_int as uint8_t,
        0x36 as libc::c_int as uint8_t,
        0xb8 as libc::c_int as uint8_t,
        0x4f as libc::c_int as uint8_t,
        0x55 as libc::c_int as uint8_t,
        0x7f as libc::c_int as uint8_t,
        0xad as libc::c_int as uint8_t,
        0xd3 as libc::c_int as uint8_t,
    ];
    static mut kAESCBCEncCiphertext: [uint8_t; 32] = [
        0x56 as libc::c_int as uint8_t,
        0x46 as libc::c_int as uint8_t,
        0xc1 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0xf4 as libc::c_int as uint8_t,
        0x13 as libc::c_int as uint8_t,
        0xd6 as libc::c_int as uint8_t,
        0xff as libc::c_int as uint8_t,
        0x62 as libc::c_int as uint8_t,
        0x92 as libc::c_int as uint8_t,
        0x41 as libc::c_int as uint8_t,
        0x7a as libc::c_int as uint8_t,
        0x26 as libc::c_int as uint8_t,
        0xc6 as libc::c_int as uint8_t,
        0x86 as libc::c_int as uint8_t,
        0xbd as libc::c_int as uint8_t,
        0x30 as libc::c_int as uint8_t,
        0x5f as libc::c_int as uint8_t,
        0xb6 as libc::c_int as uint8_t,
        0x57 as libc::c_int as uint8_t,
        0xa7 as libc::c_int as uint8_t,
        0xd2 as libc::c_int as uint8_t,
        0x50 as libc::c_int as uint8_t,
        0x3a as libc::c_int as uint8_t,
        0xc5 as libc::c_int as uint8_t,
        0x5e as libc::c_int as uint8_t,
        0x8e as libc::c_int as uint8_t,
        0x93 as libc::c_int as uint8_t,
        0x40 as libc::c_int as uint8_t,
        0xf2 as libc::c_int as uint8_t,
        0x10 as libc::c_int as uint8_t,
        0xd8 as libc::c_int as uint8_t,
    ];
    memcpy(
        aes_iv.as_mut_ptr() as *mut libc::c_void,
        kAESIV.as_ptr() as *const libc::c_void,
        ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
    );
    if AES_set_encrypt_key(
        kAESKey.as_ptr(),
        (8 as libc::c_int as libc::c_ulong)
            .wrapping_mul(::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong)
            as libc::c_uint,
        &mut aes_key,
    ) != 0 as libc::c_int
    {
        fprintf(
            stderr,
            b"AES_set_encrypt_key failed.\n\0" as *const u8 as *const libc::c_char,
        );
    } else {
        AES_cbc_encrypt(
            kAESCBCEncPlaintext.as_ptr(),
            output.as_mut_ptr(),
            ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
            &mut aes_key,
            aes_iv.as_mut_ptr(),
            1 as libc::c_int,
        );
        if !(check_test(
            kAESCBCEncCiphertext.as_ptr() as *const libc::c_void,
            output.as_mut_ptr() as *const libc::c_void,
            ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
            b"AES-CBC-encrypt KAT\0" as *const u8 as *const libc::c_char,
        ) == 0)
        {
            memcpy(
                aes_iv.as_mut_ptr() as *mut libc::c_void,
                kAESIV.as_ptr() as *const libc::c_void,
                ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
            );
            if AES_set_decrypt_key(
                kAESKey.as_ptr(),
                (8 as libc::c_int as libc::c_ulong)
                    .wrapping_mul(
                        ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
                    ) as libc::c_uint,
                &mut aes_key,
            ) != 0 as libc::c_int
            {
                fprintf(
                    stderr,
                    b"AES_set_decrypt_key failed.\n\0" as *const u8
                        as *const libc::c_char,
                );
            } else {
                AES_cbc_encrypt(
                    kAESCBCDecCiphertext.as_ptr(),
                    output.as_mut_ptr(),
                    ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                    &mut aes_key,
                    aes_iv.as_mut_ptr(),
                    0 as libc::c_int,
                );
                if !(check_test(
                    kAESCBCDecPlaintext.as_ptr() as *const libc::c_void,
                    output.as_mut_ptr() as *const libc::c_void,
                    ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                    b"AES-CBC-decrypt KAT\0" as *const u8 as *const libc::c_char,
                ) == 0)
                {
                    out_len = 0;
                    nonce = [0; 24];
                    OPENSSL_memset(
                        nonce.as_mut_ptr() as *mut libc::c_void,
                        0 as libc::c_int,
                        ::core::mem::size_of::<[uint8_t; 24]>() as libc::c_ulong,
                    );
                    if EVP_AEAD_CTX_init(
                        &mut aead_ctx,
                        EVP_aead_aes_128_gcm(),
                        kAESKey.as_ptr(),
                        ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
                        0 as libc::c_int as size_t,
                        0 as *mut ENGINE,
                    ) == 0
                    {
                        fprintf(
                            stderr,
                            b"EVP_AEAD_CTX_init for AES-128-GCM failed.\n\0" as *const u8
                                as *const libc::c_char,
                        );
                    } else if EVP_AEAD_CTX_seal(
                        &mut aead_ctx,
                        output.as_mut_ptr(),
                        &mut out_len,
                        ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
                        nonce.as_mut_ptr(),
                        EVP_AEAD_nonce_length(EVP_aead_aes_128_gcm()),
                        kAESGCMEncPlaintext.as_ptr(),
                        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                        0 as *const uint8_t,
                        0 as libc::c_int as size_t,
                    ) == 0
                        || check_test(
                            kAESGCMCiphertext.as_ptr() as *const libc::c_void,
                            output.as_mut_ptr() as *const libc::c_void,
                            ::core::mem::size_of::<[uint8_t; 48]>() as libc::c_ulong,
                            b"AES-GCM-encrypt KAT\0" as *const u8 as *const libc::c_char,
                        ) == 0
                    {
                        fprintf(
                            stderr,
                            b"EVP_AEAD_CTX_seal for AES-128-GCM failed.\n\0" as *const u8
                                as *const libc::c_char,
                        );
                    } else if EVP_AEAD_CTX_open(
                        &mut aead_ctx,
                        output.as_mut_ptr(),
                        &mut out_len,
                        ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
                        nonce.as_mut_ptr(),
                        EVP_AEAD_nonce_length(EVP_aead_aes_128_gcm()),
                        kAESGCMDecCiphertext.as_ptr(),
                        ::core::mem::size_of::<[uint8_t; 48]>() as libc::c_ulong,
                        0 as *const uint8_t,
                        0 as libc::c_int as size_t,
                    ) == 0
                        || check_test(
                            kAESGCMDecPlaintext.as_ptr() as *const libc::c_void,
                            output.as_mut_ptr() as *const libc::c_void,
                            ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                            b"AES-GCM-decrypt KAT\0" as *const u8 as *const libc::c_char,
                        ) == 0
                    {
                        AWS_LC_FIPS_failure(
                            b"AES-GCM-decrypt KAT failed because EVP_AEAD_CTX_open failed\0"
                                as *const u8 as *const libc::c_char,
                        );
                    } else {
                        SHA1(
                            kSHA1Input.as_ptr(),
                            ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
                            output.as_mut_ptr(),
                        );
                        if !(check_test(
                            kSHA1Digest.as_ptr() as *const libc::c_void,
                            output.as_mut_ptr() as *const libc::c_void,
                            ::core::mem::size_of::<[uint8_t; 20]>() as libc::c_ulong,
                            b"SHA-1 KAT\0" as *const u8 as *const libc::c_char,
                        ) == 0)
                        {
                            if !(boringssl_self_test_sha512() == 0
                                || boringssl_self_test_sha3_256() == 0
                                || boringssl_self_test_hkdf_sha256() == 0)
                            {
                                drbg = ctr_drbg_state_st {
                                    ks: aes_key_st {
                                        rd_key: [0; 60],
                                        rounds: 0,
                                    },
                                    block: None,
                                    ctr: None,
                                    counter: [0; 16],
                                    reseed_counter: 0,
                                };
                                if CTR_DRBG_init(
                                    &mut drbg,
                                    kDRBGEntropy.as_ptr(),
                                    kDRBGPersonalization.as_ptr(),
                                    ::core::mem::size_of::<[uint8_t; 18]>() as libc::c_ulong,
                                ) == 0
                                    || CTR_DRBG_generate(
                                        &mut drbg,
                                        output.as_mut_ptr(),
                                        ::core::mem::size_of::<[uint8_t; 64]>() as libc::c_ulong,
                                        kDRBGAD.as_ptr(),
                                        ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
                                    ) == 0
                                    || check_test(
                                        kDRBGOutput.as_ptr() as *const libc::c_void,
                                        output.as_mut_ptr() as *const libc::c_void,
                                        ::core::mem::size_of::<[uint8_t; 64]>() as libc::c_ulong,
                                        b"DRBG Generate KAT\0" as *const u8 as *const libc::c_char,
                                    ) == 0
                                    || CTR_DRBG_reseed(
                                        &mut drbg,
                                        kDRBGEntropy2.as_ptr(),
                                        kDRBGAD.as_ptr(),
                                        ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
                                    ) == 0
                                    || CTR_DRBG_generate(
                                        &mut drbg,
                                        output.as_mut_ptr(),
                                        ::core::mem::size_of::<[uint8_t; 64]>() as libc::c_ulong,
                                        kDRBGAD.as_ptr(),
                                        ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
                                    ) == 0
                                    || check_test(
                                        kDRBGReseedOutput.as_ptr() as *const libc::c_void,
                                        output.as_mut_ptr() as *const libc::c_void,
                                        ::core::mem::size_of::<[uint8_t; 64]>() as libc::c_ulong,
                                        b"DRBG-reseed KAT\0" as *const u8 as *const libc::c_char,
                                    ) == 0
                                {
                                    AWS_LC_FIPS_failure(
                                        b"CTR-DRBG failed\0" as *const u8 as *const libc::c_char,
                                    );
                                } else {
                                    CTR_DRBG_clear(&mut drbg);
                                    kZeroDRBG = ctr_drbg_state_st {
                                        ks: aes_key_st {
                                            rd_key: [0; 60],
                                            rounds: 0,
                                        },
                                        block: None,
                                        ctr: None,
                                        counter: [0; 16],
                                        reseed_counter: 0,
                                    };
                                    memset(
                                        &mut kZeroDRBG as *mut CTR_DRBG_STATE as *mut libc::c_void,
                                        0 as libc::c_int,
                                        ::core::mem::size_of::<CTR_DRBG_STATE>() as libc::c_ulong,
                                    );
                                    if !(check_test(
                                        &mut kZeroDRBG as *mut CTR_DRBG_STATE
                                            as *const libc::c_void,
                                        &mut drbg as *mut CTR_DRBG_STATE as *const libc::c_void,
                                        ::core::mem::size_of::<CTR_DRBG_STATE>() as libc::c_ulong,
                                        b"DRBG Clear KAT\0" as *const u8 as *const libc::c_char,
                                    ) == 0)
                                    {
                                        tls_output = [0; 32];
                                        if !(CRYPTO_tls1_prf(
                                            EVP_sha256(),
                                            tls_output.as_mut_ptr(),
                                            ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                                            kTLSSecret.as_ptr(),
                                            ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                                            kTLSLabel.as_ptr(),
                                            ::core::mem::size_of::<[libc::c_char; 15]>()
                                                as libc::c_ulong,
                                            kTLSSeed1.as_ptr(),
                                            ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
                                            kTLSSeed2.as_ptr(),
                                            ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
                                        ) == 0
                                            || check_test(
                                                kTLSOutput.as_ptr() as *const libc::c_void,
                                                tls_output.as_mut_ptr() as *const libc::c_void,
                                                ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                                                b"TLS-KDF KAT\0" as *const u8 as *const libc::c_char,
                                            ) == 0)
                                        {
                                            kPBKDF2Iterations = 2 as libc::c_int as libc::c_uint;
                                            pbkdf2_output = [0; 25];
                                            if !(PKCS5_PBKDF2_HMAC(
                                                kPBKDF2Password.as_ptr() as *const libc::c_char,
                                                ::core::mem::size_of::<[uint8_t; 18]>() as libc::c_ulong,
                                                kPBKDF2Salt.as_ptr(),
                                                ::core::mem::size_of::<[uint8_t; 36]>() as libc::c_ulong,
                                                kPBKDF2Iterations,
                                                EVP_sha256(),
                                                ::core::mem::size_of::<[uint8_t; 25]>() as libc::c_ulong,
                                                pbkdf2_output.as_mut_ptr(),
                                            ) == 0
                                                || check_test(
                                                    kPBKDF2DerivedKey.as_ptr() as *const libc::c_void,
                                                    pbkdf2_output.as_mut_ptr() as *const libc::c_void,
                                                    ::core::mem::size_of::<[uint8_t; 25]>() as libc::c_ulong,
                                                    b"PBKDF2 KAT\0" as *const u8 as *const libc::c_char,
                                                ) == 0)
                                            {
                                                sskdf_digest_output = [0; 256];
                                                if SSKDF_digest(
                                                    &mut *sskdf_digest_output
                                                        .as_mut_ptr()
                                                        .offset(0 as libc::c_int as isize),
                                                    ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
                                                    EVP_sha256(),
                                                    &*kSSKDFDigestSharedSecret
                                                        .as_ptr()
                                                        .offset(0 as libc::c_int as isize),
                                                    ::core::mem::size_of::<[uint8_t; 51]>() as libc::c_ulong,
                                                    &*kSSKDFDigestInfo
                                                        .as_ptr()
                                                        .offset(0 as libc::c_int as isize),
                                                    ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                                                ) == 0
                                                    || check_test(
                                                        kSSKDFDigestDerivedKey.as_ptr() as *const libc::c_void,
                                                        sskdf_digest_output.as_mut_ptr() as *const libc::c_void,
                                                        ::core::mem::size_of::<[uint8_t; 256]>() as libc::c_ulong,
                                                        b"SSKDF_digest KAT\0" as *const u8 as *const libc::c_char,
                                                    ) == 0
                                                {
                                                    fprintf(
                                                        stderr,
                                                        b"SSKDF_digest failed.\n\0" as *const u8
                                                            as *const libc::c_char,
                                                    );
                                                } else {
                                                    kbkdf_ctr_hmac_output = [0; 16];
                                                    if !(KBKDF_ctr_hmac(
                                                        kbkdf_ctr_hmac_output.as_mut_ptr(),
                                                        ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
                                                        EVP_sha256(),
                                                        kKBKDF_ctr_hmac_secret.as_ptr(),
                                                        ::core::mem::size_of::<[uint8_t; 32]>() as libc::c_ulong,
                                                        kKBKDF_ctr_hmac_info.as_ptr(),
                                                        ::core::mem::size_of::<[uint8_t; 60]>() as libc::c_ulong,
                                                    ) == 0
                                                        || check_test(
                                                            kKBKDF_ctr_hmac_output.as_ptr() as *const libc::c_void,
                                                            kbkdf_ctr_hmac_output.as_mut_ptr() as *const libc::c_void,
                                                            ::core::mem::size_of::<[uint8_t; 16]>() as libc::c_ulong,
                                                            b"KBKDF-CTR-HMAC-SHA-256 KAT\0" as *const u8
                                                                as *const libc::c_char,
                                                        ) == 0)
                                                    {
                                                        ret = 1 as libc::c_int;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    EVP_AEAD_CTX_cleanup(&mut aead_ctx);
    return ret;
}
#[unsafe(no_mangle)]
pub unsafe extern "C" fn BORINGSSL_self_test() -> libc::c_int {
    if boringssl_self_test_fast() == 0 || boringssl_self_test_rsa() == 0
        || boringssl_self_test_ecc() == 0 || boringssl_self_test_ffdh() == 0
        || boringssl_self_test_ml_kem() == 0 || boringssl_self_test_ml_dsa() == 0
        || boringssl_self_test_eddsa() == 0 || boringssl_self_test_hasheddsa() == 0
    {
        return 0 as libc::c_int;
    }
    return 1 as libc::c_int;
}
